#!/bin/bash

# The Rcpp functions in the package are compiled against the (static) C library
# libcl.a. The library is generated when compiling the Corpus Workbench, it is 
# also part of the binaries that are available at http://cwb.sourceforge.net.
# 
# The configure script ensures that the library and the corresponding header 
# files are available and the location is knwon. It tries to locate the library
# first using cwb-config, a shell script that resides in the directory of the CWB
# binaries. If the library is not present, the script downloads the appropriate 
# binary version of the CWB, putting it into the directory ./cwb/lib. 
# 
# The Mavkevars file is generated by this configure script, and CFLAGS and LDFLAGS
# are set depending on the location of libcl.a and the header files.


CWB_CONFIG_PATH=`command -v cwb-config`

if [ -z $CWB_CONFIG_PATH ]; then
  # download CWB binaries if CWB is not installed
  case $(uname -s) in
    Darwin)
      CWB_DISTRO="cwb-3.0.0-osx-10.5-universal";;
    Linux)
      ARCH=`lscpu | head -n 1 | grep -oP '\w+$'`
      case "$ARCH" in 
        x86_64)
          CWB_DISTRO="cwb-3.0.0-linux-x86_64";;
        i386) 
          CWB_DISTRO="cwb-3.0.0-linux-i386";;
        arm)
          echo "Did not find an installation of the Corpus Workbench (CWB) on your system."
          echo "If you have installed the CWB, ensure that cwb-config is on your path."
          echo "Unfortunately, pre-compiled binaries are not available for ARM architecture."
          echo "Please compile the CWB yourself, and add the bin directory with cwb-config"
          echo "to your path."
          exit 1;
      esac;;
    SunOS)
      CPU_INFO=`psrinfo -pv | sed -n '2p'`
      case $CPU_INFO in
        x86)
          echo "Did not find an installation of the Corpus Workbench (CWB) on your system."
          echo "If you have installed the CWB, ensure that cwb-config is on your path."
          echo "Unfortunately, pre-compiled binaries are only available for SPARK architecture." 
          echo "Please compile the CWB yourself, and add the bin directory with cwb-config"
          echo "to your path."
          exit;;
        SPARK)
          CWB_DISTRO="cwb-3.0.0-solaris-sparc";;
      esac;;
  esac
  
  CWB_TARBALL=$CWB_DISTRO.tar.gz
  CWB_URL=https://sourceforge.net/projects/cwb/files/cwb/cwb-3.0.0/$CWB_TARBALL
  R_CMD='download.file(url = "'"$CWB_URL"'", destfile = "'"$CWB_TARBALL"'")'
  ${R_HOME}/bin/Rscript -e "$R_CMD"
  tar xf $CWB_TARBALL
  rm $CWB_TARBALL
  mv $CWB_DISTRO cwb
  CWB_CFLAGS="-I../inst/include/cwb"
  CWB_LDFLAGS="-L../cwb/lib -lcl"
else
  # ensure that cl.h is available
  CWB_INCDIR="`cwb-config --incdir`/cwb"
  if [ ! -e "$CWB_INCDIR/cl.h" ]; then
    echo "Aborting - cannot find header files for the corpus library (cl.h) in the"
    echo "directory suggested by cwb-config: $CWB_LIBDIR"
    exit 1;
  fi
  CWB_CFLAGS="`cwb-config --cflags`/cwb"
  
  CWB_LIBDIR=`cwb-config --libdir`
  if [ ! -e "$CWB_LIBDIR/libcl.a" ]; then
    echo "Aborting - cannot find corpus library (libcl.a) in the directory suggested"
    echo "by cwb-config: $CWB_LIBDIR"
    exit 1;
  fi
  CWB_LDFLAGS=`cwb-config --ldflags`
  if [ ! -e ./cwb ]; then
    mkdir cwb
    mkdir cwb/lib
  fi
fi 

# Generate Makevars - very simple alternative to using a
# full-fledged configure script 


if [ -e ./src/Makevars ]; then rm ./src/Makevars; fi
echo "PKG_CPPFLAGS = $CWB_CFLAGS" > ./src/Makevars
echo "PKG_LIBS = $CWB_LDFLAGS" >> ./src/Makevars

REGISTRY_FILE=$(pwd)/inst/extdata/cwb/registry/reuters
HOME_LINE="HOME $R_PACKAGE_DIR/extdata/cwb/indexed_corpora/reuters"

R_CMD='r<-readLines("'"$REGISTRY_FILE"'");r[10]<-"'"$HOME_LINE"'";writeLines(text=r,con="'"$REGISTRY_FILE"'")'
${R_HOME}/bin/Rscript -e "$R_CMD"
