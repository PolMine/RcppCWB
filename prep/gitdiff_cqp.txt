diff --git a/src/cwb/cqp/depend.mk b/src/cwb/cqp/depend.mk
new file mode 100644
index 0000000..e69de29
diff --git a/src/cwb/cqp/output.c b/src/cwb/cqp/output.c
index 19a2e2d..ecfb357 100644
--- a/src/cwb/cqp/output.c
+++ b/src/cwb/cqp/output.c
@@ -622,7 +622,7 @@ cqpmessage(MessageType type, char *format, ...)
 
     if (!silent || type == Error) {
       Rprintf("%s:\n\t", msg);
-      vRprintf(format, ap);
+      Rprintf(format, ap);
       Rprintf("\n");
     }
 
diff --git a/src/cwb/cqp/ranges.c b/src/cwb/cqp/ranges.c
index 55b3c06..73083b0 100644
--- a/src/cwb/cqp/ranges.c
+++ b/src/cwb/cqp/ranges.c
@@ -1051,7 +1051,7 @@ SortExternally(void)
   if ((fd = open_temporary_file(temporary_name)) != NULL) {
     int line, p1start, p1end, plen, step, token, l;
 
-    line = -1;                  
+    line = -1;                 
     if (text_size > 0) {
 
       for (line = 0; line < srt_cl->size; line++) {
@@ -1123,13 +1123,6 @@ SortExternally(void)
             if (value) {
               int i, p = strlen((char *) value);
               if (srt_flags) {
-                // DELETE WHEN  NEW FORM OF CL_STRING_CANONICAL CONFIRMED FUNCTIONAL
-//                /* allocate extra mem in case of UTF8 folding */
-//                char *newvalue = cl_malloc( (p + 1) * (srt_cl->corpus->charset == utf8 ? 2 : 1) );
-//                strcpy(newvalue, value);
-//                cl_string_canonical(newvalue, srt_cl->corpus->charset, srt_flags);
-//                del_value = 1;
-//                value = newvalue;
                 value = cl_string_canonical(value, srt_cl->corpus->charset, srt_flags, CL_STRING_CANONICAL_STRDUP);
                 del_value = 1;
               }
@@ -1201,7 +1194,7 @@ SortExternally(void)
             int num = atoi(sort_call);
             if (num < 0 || num >= srt_cl->size) {
               Rprintf("Error in externally sorted file - line number #%d out of range\n", num);
-              break;            
+              break;          
             }
             srt_cl->sortidx[line] = num;
             line++;
@@ -1233,6 +1226,8 @@ SortExternally(void)
       return 0;
   }
 }
+*/
+ 
   
 /**
  * Defined if a sort cache is to be used in sorting concordance lines.
diff --git a/src/cwb/cqp/regex2dfa.c b/src/cwb/cqp/regex2dfa.c
index 95f07ce..3c474ff 100644
--- a/src/cwb/cqp/regex2dfa.c
+++ b/src/cwb/cqp/regex2dfa.c
@@ -233,7 +233,7 @@ REGEX2DFA_ERROR(char *Format, ...)
   va_list AP;
   
   Rprintf("[%d] ", LINE);
-  va_start(AP, Format); vRprintf(Format, AP); va_end(AP);
+  va_start(AP, Format); Rprintf(Format, AP); va_end(AP);
   fputc('\n', stderr);
   if (++ERRORS == MAX_ERRORS) {
     Rprintf("regex2dfa: Reached the %d error limit.\n", MAX_ERRORS);
diff --git a/src/cwb/cqp/variables.c b/src/cwb/cqp/variables.c
index ddc633e..1168894 100644
--- a/src/cwb/cqp/variables.c
+++ b/src/cwb/cqp/variables.c
@@ -282,7 +282,7 @@ NewVariable(char *varname)
                                           nr_variables * sizeof(Variable));
     /* no longer necessary: cl_malloc/_realloc checks for this.
     if (VariableSpace == NULL) {
-      Rprintf("Fatal Error: Variable space out of memory.\n");
+      RprintF("Fatal Error: Variable space out of memory.\n");
       assert(0 && "Sorry, big problem here!");
     } */
     