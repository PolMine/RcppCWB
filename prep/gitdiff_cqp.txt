diff --git a/src/cwb/cqp/depend.mk b/src/cwb/cqp/depend.mk
new file mode 100644
index 0000000..e69de29
diff --git a/src/cwb/cqp/lex.yy.c b/src/cwb/cqp/lex.yy.c
index 1b02aff..671ff59 100644
--- a/src/cwb/cqp/lex.yy.c
+++ b/src/cwb/cqp/lex.yy.c
@@ -2458,7 +2458,7 @@ static int yy_get_next_buffer (void)
 	return yy_is_jam ? 0 : yy_current_state;
 }
 
-1
+
 /** Immediately switch to a different input stream.
  * @param input_file A readable stream.
  * 
diff --git a/src/cwb/cqp/parser.tab.c b/src/cwb/cqp/parser.tab.c
index c18efef..71a988b 100644
--- a/src/cwb/cqp/parser.tab.c
+++ b/src/cwb/cqp/parser.tab.c
@@ -340,7 +340,9 @@ extern int yylex(void);
 
 void yyerror (char *s)
 {
-  cqpmessage(Error, "CQP Syntax Error: %s\n\t%s <--", s, QueryBuffer);
+  /* Commented out to avoid a crash */
+  /* cqpmessage(Error, "CQP Syntax Error: %s\n\t%s <--", s, QueryBuffer); */
+  cqpmessage(Error, "CQP Syntax Error: %s", s); /* slight modification */
   generate_code = 0;
 }
 
@@ -1515,7 +1517,7 @@ while (YYID (0))
 #ifndef YY_LOCATION_PRINT
 # if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
 #  define YY_LOCATION_PRINT(File, Loc)			\
-     Rprintf("%d.%d-%d.%d",			\
+     Rprintf ("%d.%d-%d.%d",			\
 	      (Loc).first_line, (Loc).first_column,	\
 	      (Loc).last_line,  (Loc).last_column)
 # else
@@ -1668,11 +1670,11 @@ yy_reduce_print (yyvsp, yyrule)
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      Rprintf("   $%d = ", yyi + 1);
+      Rprintf ("   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      Rprintf("\n");
+      Rprintf ("\n");
     }
 }
 
@@ -2943,7 +2945,7 @@ yyreduce:
   case 133:
 #line 819 "parser.y"
     { 
-                  int ok;
+                  int ok __attribute__((unused));
                   if ((yyvsp[(2) - (5)].cl) && generate_code) {
                     ok = SortSubcorpus((yyvsp[(2) - (5)].cl), (yyvsp[(3) - (5)].sortclause), ((yyvsp[(4) - (5)].ival) >= 1) ? (yyvsp[(4) - (5)].ival) : 1, &((yyvsp[(5) - (5)].redir)));
                     FreeSortClause((yyvsp[(3) - (5)].sortclause));