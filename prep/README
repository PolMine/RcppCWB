cwb/cqp/options.h
-----------------
The file is copied to _options.h, and include "concordance.h" is commented out in _options.h
The cpp file with the cqp functions calls _options.h. This omits that a series of includes is
performed that causes an error.


cwb/cqp/hash.c
--------------

The following symbols/functions are defined exactly the same way in cl/lexhash.c and cqp/hash.c:
hash_string
is_prime
find_prime
To avoid linker errors, the functions are commented out in cqp/hash.c


cwb/cqp/Makefile
----------------

# target all modified

all: libcqp.a

# new target added - to generate libcqp.a

libcqp.a: $(OBJS) $(CQI_OBJS)
        $(RM) $@
        $(AR) $@ $^
        $(RANLIB) $@


cwb/cqp/table.h
---------------

These lines provoke a warning from header guard:
#ifndef _cqp_table_h
#define _cqp_table_h_

Replaced with:

#ifndef _cqp_table_h_
#define _cqp_table_h_

cwb/cqp/*
---------

printf needs to be replaced by Rprintf - ultimately did that manually

cwb/cl/endian.h
---------------

The file causes issues with the endian.h system file. The best solution 
I could come up with is to rename endian.h into endian2.h.  Then
- also turn endian.h into endian2.h in the Makefile
- change include statements to 'include "endian2.h"'


cwb/cqp/sgml-print.c ; latex-print.c ; ascii-print.c ; html-print.c
-------------------------------------------------------------------
file 'sgml-print.c', 'latex-print.c', 'ascii-print.c' and 'html-print.c' in ./src/cwb/cqp:
include for header file time.h added (in addition to sys/time.h):
#include <time.h>
to avoid warning of implicit function declaration 

cwb/cqp/eval.c
--------------
line 2891 changed:
assert(col->type = tabular); turned into
assert((col->type = tabular));
to avoid -Wparentheses error (on Debian CRAN machine)

flex/bison
-----------
The flex and bison parsers may be missing on CRAN build machines. To avoid 
errors, parsed files files are generated and included:
registry.tab.c
registry.tab.h
registry.y


Datei corpmanag.c
-----------------
Funktion 'valid_subcorpus_name' neu:
Boolean
valid_subcorpus_name(char *corpusname) {
  char mother[MAX_LINE_LENGTH];
  return ((split_subcorpus_name(corpusname, mother) == NULL) ? False : True);
}
--> vorher nur split_subcorpus_name ohne parameter

Behebt folgenden Fehler:
Found the following significant warnings:
  corpmanag.c:1717:12: warning: comparison of function 'split_subcorpus_name' equal to a null pointer is always false [-Wtautological-pointer-compare]


Datei cl/lex.reg.c
------------------
Funktion 'static void yyunput (int c, register char * yy_bp )' auskommentiert, zur Vermeidung Nachricht:
lex.creg.c:1410:17: warning: unused function 'yyunput' [-Wunused-function]


Funktion open_temporary_file
----------------------------
open_temporary_file(char *tmp_name_buffer) auskommentiert in cqp/output.c
Platzhalter auskommentiert in cqp/output.h
Funktionen auskommentiert, die open_temporary_file aufrufen:
- ComputeGroupExternally (cqp/groups.c)
- SortExternally (cqp/ranges.c)
Wiederum Aufrufe dieser Funktionen auskommentiert
Dadurch Vermeidung der Warnmeldung:

Datei cl/lex.yy.c
-----------------
Funktion yyunput auskommentiert, zur Vermeidung von FEhler:
lex.yy.c:2459:17: warning: unused function 'yyunput' [-Wunused-function]
auskommentiert: static int input  (void)
um zu vermeiden:
lex.yy.c:2500:16: warning: function 'input' is not needed and will not be emitted [-Wunneeded-internal-declaration]
