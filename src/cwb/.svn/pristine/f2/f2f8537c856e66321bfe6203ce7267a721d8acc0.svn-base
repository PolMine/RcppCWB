<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>CWB: utils/cwb-scan-corpus.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CWB</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_0fd7298e6c8649bb41921df976023b83.html">utils</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<h1>cwb-scan-corpus.c File Reference</h1>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="globals_8h.html">../cl/globals.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="cl_8h.html">../cl/cl.h</a>&quot;</code><br/>
</div><h2><a name="nested-classes"></a>
Data Structures</h2>
<ul>
<li>struct <a class="el" href="struct__hash__entry.html">_hash_entry</a>
<dl class="el"><dd class="mdescRight">Structure representing hash entries.  <a href="struct__hash__entry.html#_details">More...</a><br/></dl><li>struct <a class="el" href="struct___hash.html">_Hash</a>
<dl class="el"><dd class="mdescRight">A specialised hash for computing frequency distributions over tuples of lexicon IDs.  <a href="struct___hash.html#_details">More...</a><br/></dl></ul>
<h2><a name="define-members"></a>
Defines</h2>
<ul>
<li>#define <a class="el" href="cwb-scan-corpus_8c.html#a1cedd019093bcd63081d113e73ae348e">DEFAULT_BUCKETS</a>&#160;&#160;&#160;1000000
<dl class="el"><dd class="mdescRight">use 1 million buckets by default  <a href="#a1cedd019093bcd63081d113e73ae348e"></a><br/></dl><li>#define <a class="el" href="cwb-scan-corpus_8c.html#a4885d311d80994fd106f44c07cec9cc4">MAX_N</a>&#160;&#160;&#160;32
<dl class="el"><dd class="mdescRight">maximum value of N (makes life a little easier)  <a href="#a4885d311d80994fd106f44c07cec9cc4"></a><br/></dl></ul>
<h2><a name="typedef-members"></a>
Typedefs</h2>
<ul>
<li>typedef struct <a class="el" href="struct__hash__entry.html">_hash_entry</a> * <a class="el" href="cwb-scan-corpus_8c.html#a9e170b63f1c327dabd7e964ba382ffab">HashEntry</a>
<dl class="el"><dd class="mdescRight">Structure representing hash entries.  <a href="#a9e170b63f1c327dabd7e964ba382ffab"></a><br/></dl></ul>
<h2><a name="func-members"></a>
Functions</h2>
<ul>
<li>void <a class="el" href="cwb-scan-corpus_8c.html#a72430d2277a4b79020097a4f3eb0d153">scancorpus_usage</a> (void)
<dl class="el"><dd class="mdescRight">Prints a usage message and exits the program.  <a href="#a72430d2277a4b79020097a4f3eb0d153"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options</a> (int argc, char *argv[])
<dl class="el"><dd class="mdescRight">Parses the command-line options of the program.  <a href="#a291e5974237485d06cc8da932a1d98a0"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#ad6740255386952216cb75d813243a3ea">is_prime</a> (int n)
<dl class="el"><dd class="mdescRight">Checks whether a number is prime.  <a href="#ad6740255386952216cb75d813243a3ea"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a6bb4d75c3e8354cff3efd98002335877">find_prime</a> (int n)
<dl class="el"><dd class="mdescRight">Finds a prime number.  <a href="#a6bb4d75c3e8354cff3efd98002335877"></a><br/></dl><li>unsigned int <a class="el" href="cwb-scan-corpus_8c.html#ac017885161aa74a27032053ae723f47d">hash_index</a> (int N, int *tuple)
<dl class="el"><dd class="mdescRight">Computes a hash index for an N-tuple of ints.  <a href="#ac017885161aa74a27032053ae723f47d"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a72dd77d2c2548160807c9db106ae9dd2">tuples_eq</a> (int N, int *t1, int *t2)
<dl class="el"><dd class="mdescRight">Compares two N-tuples for equality.  <a href="#a72dd77d2c2548160807c9db106ae9dd2"></a><br/></dl><li><a class="el" href="struct__hash__entry.html">HashEntry</a> <a class="el" href="cwb-scan-corpus_8c.html#ac5a4421e429785c0b7a85185612e8ecf">hash_find</a> (int *tuple, int *R_index)
<dl class="el"><dd class="mdescRight">Finds an N-tuple in the global hash.  <a href="#ac5a4421e429785c0b7a85185612e8ecf"></a><br/></dl><li>void <a class="el" href="cwb-scan-corpus_8c.html#a9e44f8ee16add21125bfc4956588a40f">hash_add</a> (int *tuple, int f)
<dl class="el"><dd class="mdescRight">Inserts an N-tuple into the global hash.  <a href="#a9e44f8ee16add21125bfc4956588a40f"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a9ffba13fb1d4cf84740a9909bd04b38d">is_letter</a> (unsigned char c)
<dl class="el"><dd class="mdescRight">Checks whether a character is a letter in Latin-1.  <a href="#a9ffba13fb1d4cf84740a9909bd04b38d"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#ad40d04a47016bc8bc1aa8cbd182cdd69">is_regular</a> (char *s)
<dl class="el"><dd class="mdescRight">Check regularity of a token.  <a href="#ad40d04a47016bc8bc1aa8cbd182cdd69"></a><br/></dl><li>void <a class="el" href="cwb-scan-corpus_8c.html#a8947ac051b910a311d2d1f0ef28272bd">scancorpus_add_key</a> (char *key)
<dl class="el"><dd class="mdescRight">Adds a key to global variable Hash.  <a href="#a8947ac051b910a311d2d1f0ef28272bd"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a0bd5ce6ea72cb4064addfcc9a02ac3b5">get_next_range</a> (int *start, int *end)
<dl class="el"><dd class="mdescRight">Reads the next range of corpus positions.  <a href="#a0bd5ce6ea72cb4064addfcc9a02ac3b5"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main</a> (int argc, char *argv[])
<dl class="el"><dd class="mdescRight">Main function for cwb-scan-corpus.  <a href="#a0ddf1224851353fc92bfbff6f499fa97"></a><br/></dl></ul>
<h2><a name="var-members"></a>
Variables</h2>
<ul>
<li>struct <a class="el" href="struct___hash.html">_Hash</a> <a class="el" href="cwb-scan-corpus_8c.html#acd0df70578d8633182bc33a50bdf6f01">Hash</a>
<li><a class="el" href="struct_t_corpus.html">Corpus</a> * <a class="el" href="cwb-scan-corpus_8c.html#a3b2ca35e2432cf1326402df1ba775129">C</a>
<dl class="el"><dd class="mdescRight">corpus we're working on  <a href="#a3b2ca35e2432cf1326402df1ba775129"></a><br/></dl><li>char * <a class="el" href="cwb-scan-corpus_8c.html#a5f073f0f01b14ca3b4ebd353ba487861">reg_dir</a> = NULL
<dl class="el"><dd class="mdescRight">registry directory (NULL -&gt; use default)  <a href="#a5f073f0f01b14ca3b4ebd353ba487861"></a><br/></dl><li>char * <a class="el" href="cwb-scan-corpus_8c.html#a9ed20e8c2af270abe60e5d957f9b944b">corpname</a> = NULL
<dl class="el"><dd class="mdescRight">corpus name (command-line)  <a href="#a9ed20e8c2af270abe60e5d957f9b944b"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a9c44b741349dc84e48e21837fa322be7">check_words</a> = 0
<dl class="el"><dd class="mdescRight">if set, accept only 'regular' words in frequency counts  <a href="#a9c44b741349dc84e48e21837fa322be7"></a><br/></dl><li><a class="el" href="struct___c_l___regex.html">CL_Regex</a> <a class="el" href="cwb-scan-corpus_8c.html#a9f04edb60bfef6eb0626dccc88522f6e">regular_rx</a> = NULL
<dl class="el"><dd class="mdescRight">regex object for use when check_words is true.  <a href="#a9f04edb60bfef6eb0626dccc88522f6e"></a><br/></dl><li>char * <a class="el" href="cwb-scan-corpus_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a> = NULL
<dl class="el"><dd class="mdescRight">name of this program (from shell command)  <a href="#ab9e1449fd00c98428516f0b41eddcb10"></a><br/></dl><li>char * <a class="el" href="cwb-scan-corpus_8c.html#a4d59733effad59b54bbd4e5d6016c538">output_file</a> = NULL
<dl class="el"><dd class="mdescRight">output file name (-o option)  <a href="#a4d59733effad59b54bbd4e5d6016c538"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a37cdd0e0fdf3b36ff38f39ae8cde5faf">frequency_threshold</a> = 0
<dl class="el"><dd class="mdescRight">frequency threshold for result table (-f option)  <a href="#a37cdd0e0fdf3b36ff38f39ae8cde5faf"></a><br/></dl><li>char * <a class="el" href="cwb-scan-corpus_8c.html#a852cca2eda063ea0ea7e399b4065174c">frequency_att</a> = NULL
<dl class="el"><dd class="mdescRight">p-attribute with frequency entries for corpus rows (when abusing corpus as frequency database)  <a href="#a852cca2eda063ea0ea7e399b4065174c"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#aab89ba09a25f6937d0f2ea3e65182a19">global_start</a> = 0
<dl class="el"><dd class="mdescRight">start scanning at this cpos (defaults to start of corpus)  <a href="#aab89ba09a25f6937d0f2ea3e65182a19"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a3b8ce181bef9b6c58551a2f7dcc647f1">global_end</a> = -1
<dl class="el"><dd class="mdescRight">will be set up in <a class="el" href="cqpserver_8c.html#a0ddf1224851353fc92bfbff6f499fa97" title="Main function for the cqpserver app.">main()</a> unless changed with -e switch.  <a href="#a3b8ce181bef9b6c58551a2f7dcc647f1"></a><br/></dl><li>char * <a class="el" href="cwb-scan-corpus_8c.html#a187a588249b531d66f0435b4f9858ec0">ranges_file</a> = NULL
<dl class="el"><dd class="mdescRight">file with ranges to scan (pairs of corpus positions)  <a href="#a187a588249b531d66f0435b4f9858ec0"></a><br/></dl><li>FILE * <a class="el" href="cwb-scan-corpus_8c.html#a8a60853713c55aa8ebf0904b3c26690d">ranges_fh</a> = NULL
<dl class="el"><dd class="mdescRight">corresponding filehandle  <a href="#a8a60853713c55aa8ebf0904b3c26690d"></a><br/></dl><li>int <a class="el" href="cwb-scan-corpus_8c.html#a55602ca214fb365e8deef9a73c8442e7">quiet</a> = 0
<dl class="el"><dd class="mdescRight">if set, don't show progress information on stderr  <a href="#a55602ca214fb365e8deef9a73c8442e7"></a><br/></dl></ul>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a1cedd019093bcd63081d113e73ae348e"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::DEFAULT_BUCKETS" ref="a1cedd019093bcd63081d113e73ae348e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define DEFAULT_BUCKETS&#160;&#160;&#160;1000000</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>use 1 million buckets by default </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a4885d311d80994fd106f44c07cec9cc4"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::MAX_N" ref="a4885d311d80994fd106f44c07cec9cc4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX_N&#160;&#160;&#160;32</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>maximum value of N (makes life a little easier) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a72430d2277a4b79020097a4f3eb0d153">scancorpus_usage()</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="a9e170b63f1c327dabd7e964ba382ffab"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::HashEntry" ref="a9e170b63f1c327dabd7e964ba382ffab" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct__hash__entry.html">_hash_entry</a> * <a class="el" href="struct__hash__entry.html">HashEntry</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Structure representing hash entries. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="regex2dfa_8c.html#a6bad0ab1a08bc253f829b23abe41cc56" title="Creates a one-byte hash of the string S.">Hash</a> </dd></dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a6bb4d75c3e8354cff3efd98002335877"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::find_prime" ref="a6bb4d75c3e8354cff3efd98002335877" args="(int n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int find_prime </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Finds a prime number. </p>
<p>Returns smallest prime &gt;= n.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>lower bound for the generated prime. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The first prime number greater than n, or 0 if no prime number was found within the sizeof a signed int. </dd></dl>

<p>References <a class="el" href="lexhash_8c.html#ad6740255386952216cb75d813243a3ea">is_prime()</a>.</p>

</div>
</div>
<a class="anchor" id="a0bd5ce6ea72cb4064addfcc9a02ac3b5"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::get_next_range" ref="a0bd5ce6ea72cb4064addfcc9a02ac3b5" args="(int *start, int *end)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int get_next_range </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>end</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Reads the next range of corpus positions. </p>
<p>The ranges of corpus positions are taken either from global settings (-s, -e) or from a specified file (-R).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">start</td><td>Where to put the start of the next range. </td></tr>
    <tr><td class="paramname">end</td><td>Where to put the end of the next range. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>FALSE after last range, TRUE otherwise </dd></dl>

<p>References <a class="el" href="cl_8h.html#ad68dfe0ca2fbad5052e8213a06f5b4ba">CL_MAX_LINE_LENGTH</a>, <a class="el" href="cwb-scan-corpus_8c.html#a3b8ce181bef9b6c58551a2f7dcc647f1">global_end</a>, <a class="el" href="cwb-scan-corpus_8c.html#aab89ba09a25f6937d0f2ea3e65182a19">global_start</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a8a60853713c55aa8ebf0904b3c26690d">ranges_fh</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a9e44f8ee16add21125bfc4956588a40f"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::hash_add" ref="a9e44f8ee16add21125bfc4956588a40f" args="(int *tuple, int f)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hash_add </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>tuple</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>f</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Inserts an N-tuple into the global hash. </p>
<p>If the N-tuple is already in the hash, its count is incremented by f, but nothing is inserted.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">tuple</td><td>The tuple to add (array of ints). </td></tr>
    <tr><td class="paramname">f</td><td>The frequency of the tuple. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="struct__hash__entry.html#ae0d22272b68e75d19ac0b80c01f806b6">_hash_entry::freq</a>, <a class="el" href="cwb-scan-corpus_8c.html#acd0df70578d8633182bc33a50bdf6f01">Hash</a>, <a class="el" href="cwb-scan-corpus_8c.html#ac5a4421e429785c0b7a85185612e8ecf">hash_find()</a>, <a class="el" href="struct___hash.html#a2689c4b3931025b79053532a5f1b0a85">_Hash::K</a>, <a class="el" href="struct__hash__entry.html#a6acb29cbd01a818d1a327b4cf57a502b">_hash_entry::next</a>, <a class="el" href="struct___hash.html#adbb9bfe891de5c93dcea870a3209d13b">_Hash::table</a>, and <a class="el" href="struct__hash__entry.html#a28dcdb3b4936a0999c96f645d0436a83">_hash_entry::tuple</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>.</p>

</div>
</div>
<a class="anchor" id="ac5a4421e429785c0b7a85185612e8ecf"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::hash_find" ref="ac5a4421e429785c0b7a85185612e8ecf" args="(int *tuple, int *R_index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__hash__entry.html">HashEntry</a> hash_find </td>
          <td>(</td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>tuple</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>R_index</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Finds an N-tuple in the global hash. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">tuple</td><td>The tuple to search for. </td></tr>
    <tr><td class="paramname">R_index</td><td>The index of the bucket containing the located HashEntry. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The located HashEntry. </dd></dl>

<p>References <a class="el" href="struct___hash.html#a8ae05bec6635c6f8626bf633c5de3835">_Hash::buckets</a>, <a class="el" href="cwb-scan-corpus_8c.html#acd0df70578d8633182bc33a50bdf6f01">Hash</a>, <a class="el" href="cwb-scan-corpus_8c.html#ac017885161aa74a27032053ae723f47d">hash_index()</a>, <a class="el" href="struct___hash.html#a2689c4b3931025b79053532a5f1b0a85">_Hash::K</a>, <a class="el" href="struct__hash__entry.html#a6acb29cbd01a818d1a327b4cf57a502b">_hash_entry::next</a>, <a class="el" href="struct___hash.html#adbb9bfe891de5c93dcea870a3209d13b">_Hash::table</a>, <a class="el" href="struct__hash__entry.html#a28dcdb3b4936a0999c96f645d0436a83">_hash_entry::tuple</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a72dd77d2c2548160807c9db106ae9dd2">tuples_eq()</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a9e44f8ee16add21125bfc4956588a40f">hash_add()</a>.</p>

</div>
</div>
<a class="anchor" id="ac017885161aa74a27032053ae723f47d"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::hash_index" ref="ac017885161aa74a27032053ae723f47d" args="(int N, int *tuple)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int hash_index </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>tuple</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Computes a hash index for an N-tuple of ints. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">N</td><td>Size of the tuple. </td></tr>
    <tr><td class="paramname">tuple</td><td>The tuple itself: an array of ints. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The hash index calculated. </dd></dl>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#ac5a4421e429785c0b7a85185612e8ecf">hash_find()</a>.</p>

</div>
</div>
<a class="anchor" id="a9ffba13fb1d4cf84740a9909bd04b38d"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::is_letter" ref="a9ffba13fb1d4cf84740a9909bd04b38d" args="(unsigned char c)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int is_letter </td>
          <td>(</td>
          <td class="paramtype">unsigned char&#160;</td>
          <td class="paramname"><em>c</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Checks whether a character is a letter in Latin-1. </p>
<p>This function is no longer used, it is not multi-charset-safe.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">c</td><td>The character to check. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean. </dd></dl>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#ad40d04a47016bc8bc1aa8cbd182cdd69">is_regular()</a>.</p>

</div>
</div>
<a class="anchor" id="ad6740255386952216cb75d813243a3ea"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::is_prime" ref="ad6740255386952216cb75d813243a3ea" args="(int n)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int is_prime </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>n</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Checks whether a number is prime. </p>
<p>Returns True iff n is a prime.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">n</td><td>number to check </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean </dd></dl>

</div>
</div>
<a class="anchor" id="ad40d04a47016bc8bc1aa8cbd182cdd69"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::is_regular" ref="ad40d04a47016bc8bc1aa8cbd182cdd69" args="(char *s)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int is_regular </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>s</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Check regularity of a token. </p>
<p>A token is "regular" if it contains only letters, numbers and dashes (with no dash at the end).</p>
<p>"Regularity" is used as a filter on the corpus iff the -C option is specified.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">s</td><td>String containing the token to check. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>True if the token is regular, otherwise false. </dd></dl>

<p>References <a class="el" href="cl_8h.html#a7a9d3816260f385cf56e15839c518cee">cl_regex_match()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a9ffba13fb1d4cf84740a9909bd04b38d">is_letter()</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a8947ac051b910a311d2d1f0ef28272bd">scancorpus_add_key()</a>.</p>

</div>
</div>
<a class="anchor" id="a0ddf1224851353fc92bfbff6f499fa97"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::main" ref="a0ddf1224851353fc92bfbff6f499fa97" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Main function for cwb-scan-corpus. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">argc</td><td>Number of command-line arguments. </td></tr>
    <tr><td class="paramname">argv</td><td>Command-line arguments. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="struct___hash.html#aaf6ab2f24f0995a7208242ce03f1faa1">_Hash::att</a>, <a class="el" href="cl_8h.html#a3b60fdde6a7c8fbc535efaf526dbcb78">ATT_POS</a>, <a class="el" href="struct___hash.html#a8ae05bec6635c6f8626bf633c5de3835">_Hash::buckets</a>, <a class="el" href="struct_t_corpus.html#ab7d33183c58d7df43cc5602b9c842b37">TCorpus::charset</a>, <a class="el" href="cwb-scan-corpus_8c.html#a9c44b741349dc84e48e21837fa322be7">check_words</a>, <a class="el" href="cl_8h.html#a5b756594ae431fd5ec0ffbdc77db1e64">cl_calloc()</a>, <a class="el" href="cdaccess_8c.html#a0a7fae031e5da3da00dad86317397657">cl_cpos2id()</a>, <a class="el" href="cdaccess_8c.html#aba8848d44ac4ea4d6ad600ac68cddf0e">cl_id2str()</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="cdaccess_8c.html#ae9db76b80522e91e2735414a079e952b">cl_max_cpos()</a>, <a class="el" href="cdaccess_8c.html#a80f6431eb356913b2d3b84b9cbfaae37">cl_max_id()</a>, <a class="el" href="cl_8h.html#ad68dfe0ca2fbad5052e8213a06f5b4ba">CL_MAX_LINE_LENGTH</a>, <a class="el" href="cdaccess_8c.html#a95ec41c7bd08fce95418a10c0d5c2da2">cl_max_struc()</a>, <a class="el" href="cl_8h.html#ae9e879605cdbdafc2a8939ae590b6aa0">cl_new_attribute</a>, <a class="el" href="cl_8h.html#aee476e23a98efac85d9a9288f18fe686">cl_new_corpus()</a>, <a class="el" href="cl_8h.html#a2c4607eb8e094b7699062df8eb744058">cl_new_regex()</a>, <a class="el" href="cl_8h.html#a7a9d3816260f385cf56e15839c518cee">cl_regex_match()</a>, <a class="el" href="cl_8h.html#ae01d418374c30b37fcd6b9bbfacef90e">cl_standard_registry()</a>, <a class="el" href="cdaccess_8c.html#af0793556b93840555bca436b399a00bd">cl_struc2cpos()</a>, <a class="el" href="cdaccess_8c.html#a68c164c901d2ec3304e981bc85320bf5">cl_struc2str()</a>, <a class="el" href="struct___hash.html#a096971fd413a68289795cca7ae1e95c4">_Hash::constraint_ok</a>, <a class="el" href="cwb-scan-corpus_8c.html#a9ed20e8c2af270abe60e5d957f9b944b">corpname</a>, <a class="el" href="struct___hash.html#a4245cab8f55bafd36e26dd0a341f878c">_Hash::current_struc</a>, <a class="el" href="cwb-scan-corpus_8c.html#a1cedd019093bcd63081d113e73ae348e">DEFAULT_BUCKETS</a>, <a class="el" href="struct___hash.html#a0dd259d86ea516b90d9789ba1548c29b">_Hash::end_cpos</a>, <a class="el" href="lexhash_8c.html#a6bb4d75c3e8354cff3efd98002335877">find_prime()</a>, <a class="el" href="struct__hash__entry.html#ae0d22272b68e75d19ac0b80c01f806b6">_hash_entry::freq</a>, <a class="el" href="struct___hash.html#a9fa36e6039694dfd1382466f42ce66f8">_Hash::frequency</a>, <a class="el" href="cwb-scan-corpus_8c.html#a852cca2eda063ea0ea7e399b4065174c">frequency_att</a>, <a class="el" href="cwb-scan-corpus_8c.html#a37cdd0e0fdf3b36ff38f39ae8cde5faf">frequency_threshold</a>, <a class="el" href="struct___hash.html#a13e90a388ef0d76975e0d30185d4d814">_Hash::frequency_values</a>, <a class="el" href="cwb-scan-corpus_8c.html#a0bd5ce6ea72cb4064addfcc9a02ac3b5">get_next_range()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a3b8ce181bef9b6c58551a2f7dcc647f1">global_end</a>, <a class="el" href="cwb-scan-corpus_8c.html#aab89ba09a25f6937d0f2ea3e65182a19">global_start</a>, <a class="el" href="cwb-scan-corpus_8c.html#acd0df70578d8633182bc33a50bdf6f01">Hash</a>, <a class="el" href="cwb-scan-corpus_8c.html#a9e44f8ee16add21125bfc4956588a40f">hash_add()</a>, <a class="el" href="struct___hash.html#ac91e02d17602c7185935a20fceaf5cf4">_Hash::id_list</a>, <a class="el" href="struct___hash.html#a5a99bb985f1fb5f8afa97b73882d5cd1">_Hash::id_list_size</a>, <a class="el" href="cl_8h.html#a2e9f85ae8ad88191c60cf4269b9ab296">IGNORE_DIAC</a>, <a class="el" href="struct___hash.html#a318d1298ce3968c42295f20d585f89bb">_Hash::is_constraint</a>, <a class="el" href="struct___hash.html#af89484702523e7578ef7b4af9dbc24e0">_Hash::is_negated</a>, <a class="el" href="cwb-scan-corpus_8c.html#ad40d04a47016bc8bc1aa8cbd182cdd69">is_regular()</a>, <a class="el" href="struct___hash.html#a03e51bbe5203568b7daeae718239b4a0">_Hash::is_structural</a>, <a class="el" href="struct___hash.html#a2689c4b3931025b79053532a5f1b0a85">_Hash::K</a>, <a class="el" href="cwb-scan-corpus_8c.html#a4885d311d80994fd106f44c07cec9cc4">MAX_N</a>, <a class="el" href="struct___hash.html#a5f13b0907ef9484099415aff30745e95">_Hash::max_offset</a>, <a class="el" href="struct___hash.html#a7722c8ecbb62d99aee7ce68b1752f337">_Hash::N</a>, <a class="el" href="struct__hash__entry.html#a6acb29cbd01a818d1a327b4cf57a502b">_hash_entry::next</a>, <a class="el" href="struct___hash.html#a8aa7374967f204dfae0b46fd98e301f9">_Hash::offset</a>, <a class="el" href="cwb-check-input_8c.html#a4d59733effad59b54bbd4e5d6016c538">output_file</a>, <a class="el" href="options_8h.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>, <a class="el" href="cwb-scan-corpus_8c.html#a55602ca214fb365e8deef9a73c8442e7">quiet</a>, <a class="el" href="cwb-scan-corpus_8c.html#a8a60853713c55aa8ebf0904b3c26690d">ranges_fh</a>, <a class="el" href="cwb-scan-corpus_8c.html#a187a588249b531d66f0435b4f9858ec0">ranges_file</a>, <a class="el" href="cwb-scan-corpus_8c.html#a5f073f0f01b14ca3b4ebd353ba487861">reg_dir</a>, <a class="el" href="struct___hash.html#a4af1ec508bf5099699d7d1e358bbdcf5">_Hash::regex</a>, <a class="el" href="cwb-scan-corpus_8c.html#a8947ac051b910a311d2d1f0ef28272bd">scancorpus_add_key()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a72430d2277a4b79020097a4f3eb0d153">scancorpus_usage()</a>, <a class="el" href="struct___hash.html#a1f2f933cd7247e1eabf62369436d1390">_Hash::source_base</a>, <a class="el" href="struct___hash.html#a7b5390980c7b5eb3afbb365b93ddb769">_Hash::start_cpos</a>, <a class="el" href="struct___hash.html#adbb9bfe891de5c93dcea870a3209d13b">_Hash::table</a>, <a class="el" href="struct__hash__entry.html#a28dcdb3b4936a0999c96f645d0436a83">_hash_entry::tuple</a>, <a class="el" href="cl_8h.html#aa018eeb7e5a4bb1586a3f4337011daeaa3946b00fe1f38206339d69285cda6b03">utf8</a>, <a class="el" href="struct___hash.html#a0576607974f4c06f8031128c0754b9ca">_Hash::virtual_id</a>, and <a class="el" href="eval_8h.html#a93fe6fe1a66a9de33bb160f0c3e18954a09c37d051e7e4b3f3a7e8e75dca15912">word</a>.</p>

</div>
</div>
<a class="anchor" id="a8947ac051b910a311d2d1f0ef28272bd"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::scancorpus_add_key" ref="a8947ac051b910a311d2d1f0ef28272bd" args="(char *key)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void scancorpus_add_key </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>key</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Adds a key to global variable Hash. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">key</td><td>String specifying the key (passed by <a class="el" href="cqpserver_8c.html#a0ddf1224851353fc92bfbff6f499fa97" title="Main function for the cqpserver app.">main()</a> from a command-line argument) </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="struct___hash.html#aaf6ab2f24f0995a7208242ce03f1faa1">_Hash::att</a>, <a class="el" href="cl_8h.html#a3b60fdde6a7c8fbc535efaf526dbcb78">ATT_POS</a>, <a class="el" href="cl_8h.html#a81874b84793891ea3b8db58061820f1e">ATT_STRUC</a>, <a class="el" href="cwb-itoa_8c.html#ac1ed595d526b1beccae8e324475d61ea">buf</a>, <a class="el" href="cwb-scan-corpus_8c.html#a9c44b741349dc84e48e21837fa322be7">check_words</a>, <a class="el" href="cl_8h.html#a3786eda36f00b2645b6b3a9b77410644">cl_corpus_charset()</a>, <a class="el" href="cdaccess_8c.html#aba8848d44ac4ea4d6ad600ac68cddf0e">cl_id2str()</a>, <a class="el" href="cl_8h.html#ad68dfe0ca2fbad5052e8213a06f5b4ba">CL_MAX_LINE_LENGTH</a>, <a class="el" href="cdaccess_8c.html#a95ec41c7bd08fce95418a10c0d5c2da2">cl_max_struc()</a>, <a class="el" href="cl_8h.html#ae9e879605cdbdafc2a8939ae590b6aa0">cl_new_attribute</a>, <a class="el" href="cl_8h.html#a2c4607eb8e094b7699062df8eb744058">cl_new_regex()</a>, <a class="el" href="cdaccess_8c.html#a6eb4641e0a1e14b63f2d5f2f5b6a8cea">cl_regex2id()</a>, <a class="el" href="cdaccess_8c.html#a68c164c901d2ec3304e981bc85320bf5">cl_struc2str()</a>, <a class="el" href="cdaccess_8c.html#a43a3631745e05f8fafe5006141d57663">cl_struc_values()</a>, <a class="el" href="struct___hash.html#a096971fd413a68289795cca7ae1e95c4">_Hash::constraint_ok</a>, <a class="el" href="cwb-scan-corpus_8c.html#a9ed20e8c2af270abe60e5d957f9b944b">corpname</a>, <a class="el" href="struct___hash.html#a4245cab8f55bafd36e26dd0a341f878c">_Hash::current_struc</a>, <a class="el" href="struct___hash.html#a0dd259d86ea516b90d9789ba1548c29b">_Hash::end_cpos</a>, <a class="el" href="cwb-scan-corpus_8c.html#acd0df70578d8633182bc33a50bdf6f01">Hash</a>, <a class="el" href="struct___hash.html#ac91e02d17602c7185935a20fceaf5cf4">_Hash::id_list</a>, <a class="el" href="struct___hash.html#a5a99bb985f1fb5f8afa97b73882d5cd1">_Hash::id_list_size</a>, <a class="el" href="cl_8h.html#a1f397c74f7f8ba3952858c70eb19d082">IGNORE_CASE</a>, <a class="el" href="cl_8h.html#a2e9f85ae8ad88191c60cf4269b9ab296">IGNORE_DIAC</a>, <a class="el" href="struct___hash.html#a318d1298ce3968c42295f20d585f89bb">_Hash::is_constraint</a>, <a class="el" href="struct___hash.html#af89484702523e7578ef7b4af9dbc24e0">_Hash::is_negated</a>, <a class="el" href="cwb-scan-corpus_8c.html#ad40d04a47016bc8bc1aa8cbd182cdd69">is_regular()</a>, <a class="el" href="struct___hash.html#a03e51bbe5203568b7daeae718239b4a0">_Hash::is_structural</a>, <a class="el" href="struct___hash.html#a2689c4b3931025b79053532a5f1b0a85">_Hash::K</a>, <a class="el" href="struct___hash.html#a5f13b0907ef9484099415aff30745e95">_Hash::max_offset</a>, <a class="el" href="struct___hash.html#a7722c8ecbb62d99aee7ce68b1752f337">_Hash::N</a>, <a class="el" href="struct___hash.html#a8aa7374967f204dfae0b46fd98e301f9">_Hash::offset</a>, <a class="el" href="struct___hash.html#a4af1ec508bf5099699d7d1e358bbdcf5">_Hash::regex</a>, <a class="el" href="struct___hash.html#a1f2f933cd7247e1eabf62369436d1390">_Hash::source_base</a>, and <a class="el" href="struct___hash.html#a7b5390980c7b5eb3afbb365b93ddb769">_Hash::start_cpos</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a291e5974237485d06cc8da932a1d98a0"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::scancorpus_parse_options" ref="a291e5974237485d06cc8da932a1d98a0" args="(int argc, char *argv[])" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int scancorpus_parse_options </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>argv</em>[]&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Parses the command-line options of the program. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">argc</td><td>argc from <a class="el" href="cqpserver_8c.html#a0ddf1224851353fc92bfbff6f499fa97" title="Main function for the cqpserver app.">main()</a> </td></tr>
    <tr><td class="paramname">argv</td><td>argv from <a class="el" href="cqpserver_8c.html#a0ddf1224851353fc92bfbff6f499fa97" title="Main function for the cqpserver app.">main()</a> </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The value of global optind after the function has run. </dd></dl>

<p>References <a class="el" href="struct___hash.html#a8ae05bec6635c6f8626bf633c5de3835">_Hash::buckets</a>, <a class="el" href="cwb-scan-corpus_8c.html#a9c44b741349dc84e48e21837fa322be7">check_words</a>, <a class="el" href="cwb-scan-corpus_8c.html#a852cca2eda063ea0ea7e399b4065174c">frequency_att</a>, <a class="el" href="cwb-scan-corpus_8c.html#a37cdd0e0fdf3b36ff38f39ae8cde5faf">frequency_threshold</a>, <a class="el" href="cwb-scan-corpus_8c.html#a3b8ce181bef9b6c58551a2f7dcc647f1">global_end</a>, <a class="el" href="cwb-scan-corpus_8c.html#aab89ba09a25f6937d0f2ea3e65182a19">global_start</a>, <a class="el" href="cwb-scan-corpus_8c.html#acd0df70578d8633182bc33a50bdf6f01">Hash</a>, <a class="el" href="cwb-check-input_8c.html#a4d59733effad59b54bbd4e5d6016c538">output_file</a>, <a class="el" href="cwb-scan-corpus_8c.html#a55602ca214fb365e8deef9a73c8442e7">quiet</a>, <a class="el" href="cwb-scan-corpus_8c.html#a187a588249b531d66f0435b4f9858ec0">ranges_file</a>, <a class="el" href="cwb-scan-corpus_8c.html#a5f073f0f01b14ca3b4ebd353ba487861">reg_dir</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a72430d2277a4b79020097a4f3eb0d153">scancorpus_usage()</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a72430d2277a4b79020097a4f3eb0d153"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::scancorpus_usage" ref="a72430d2277a4b79020097a4f3eb0d153" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void scancorpus_usage </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints a usage message and exits the program. </p>

<p>References <a class="el" href="cwb-scan-corpus_8c.html#a4885d311d80994fd106f44c07cec9cc4">MAX_N</a>, and <a class="el" href="globals_8h.html#a1c6d5de492ac61ad29aec7aa9a436bbf">VERSION</a>.</p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a72dd77d2c2548160807c9db106ae9dd2"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::tuples_eq" ref="a72dd77d2c2548160807c9db106ae9dd2" args="(int N, int *t1, int *t2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int tuples_eq </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>N</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>t1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>t2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Compares two N-tuples for equality. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">N</td><td>Size of the tuple. </td></tr>
    <tr><td class="paramname">t1</td><td>First tuple (array of ints of size N). </td></tr>
    <tr><td class="paramname">t2</td><td>Second tuple (array of ints of size N). </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean: true if all ints are identical, otherwise false. </dd></dl>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#ac5a4421e429785c0b7a85185612e8ecf">hash_find()</a>.</p>

</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="a3b2ca35e2432cf1326402df1ba775129"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::C" ref="a3b2ca35e2432cf1326402df1ba775129" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_t_corpus.html">Corpus</a>* <a class="el" href="cwb-scan-corpus_8c.html#a3b2ca35e2432cf1326402df1ba775129">C</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>corpus we're working on </p>

<p>Referenced by <a class="el" href="regex2dfa_8h.html#a69e30286442eee48a3350d6da9bcd4d8">regex2dfa()</a>, and <a class="el" href="regex2dfa_8c.html#a426c1001e607d31fe758b9723c8b87a3">WriteStates()</a>.</p>

</div>
</div>
<a class="anchor" id="a9c44b741349dc84e48e21837fa322be7"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::check_words" ref="a9c44b741349dc84e48e21837fa322be7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-scan-corpus_8c.html#a9c44b741349dc84e48e21837fa322be7">check_words</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>if set, accept only 'regular' words in frequency counts </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a8947ac051b910a311d2d1f0ef28272bd">scancorpus_add_key()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a9ed20e8c2af270abe60e5d957f9b944b"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::corpname" ref="a9ed20e8c2af270abe60e5d957f9b944b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#a9ed20e8c2af270abe60e5d957f9b944b">corpname</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>corpus name (command-line) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a8947ac051b910a311d2d1f0ef28272bd">scancorpus_add_key()</a>.</p>

</div>
</div>
<a class="anchor" id="a852cca2eda063ea0ea7e399b4065174c"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::frequency_att" ref="a852cca2eda063ea0ea7e399b4065174c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#a852cca2eda063ea0ea7e399b4065174c">frequency_att</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>p-attribute with frequency entries for corpus rows (when abusing corpus as frequency database) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a37cdd0e0fdf3b36ff38f39ae8cde5faf"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::frequency_threshold" ref="a37cdd0e0fdf3b36ff38f39ae8cde5faf" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-scan-corpus_8c.html#a37cdd0e0fdf3b36ff38f39ae8cde5faf">frequency_threshold</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>frequency threshold for result table (-f option) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a3b8ce181bef9b6c58551a2f7dcc647f1"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::global_end" ref="a3b8ce181bef9b6c58551a2f7dcc647f1" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-scan-corpus_8c.html#a3b8ce181bef9b6c58551a2f7dcc647f1">global_end</a> = -1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>will be set up in <a class="el" href="cqpserver_8c.html#a0ddf1224851353fc92bfbff6f499fa97" title="Main function for the cqpserver app.">main()</a> unless changed with -e switch. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="cwb-scan-corpus_8c.html#aab89ba09a25f6937d0f2ea3e65182a19" title="start scanning at this cpos (defaults to start of corpus)">global_start</a> </dd></dl>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0bd5ce6ea72cb4064addfcc9a02ac3b5">get_next_range()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="aab89ba09a25f6937d0f2ea3e65182a19"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::global_start" ref="aab89ba09a25f6937d0f2ea3e65182a19" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-scan-corpus_8c.html#aab89ba09a25f6937d0f2ea3e65182a19">global_start</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>start scanning at this cpos (defaults to start of corpus) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0bd5ce6ea72cb4064addfcc9a02ac3b5">get_next_range()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="acd0df70578d8633182bc33a50bdf6f01"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::Hash" ref="acd0df70578d8633182bc33a50bdf6f01" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">struct <a class="el" href="struct___hash.html">_Hash</a>  Hash</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a9e44f8ee16add21125bfc4956588a40f">hash_add()</a>, <a class="el" href="cwb-scan-corpus_8c.html#ac5a4421e429785c0b7a85185612e8ecf">hash_find()</a>, <a class="el" href="regex2dfa_8c.html#a6ed0508c2a6d62b74d1f15523f531553">LookUp()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, <a class="el" href="regex2dfa_8c.html#a39875b8f99c45b1cdb767af2b00e7dde">MakeExp()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a8947ac051b910a311d2d1f0ef28272bd">scancorpus_add_key()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a4d59733effad59b54bbd4e5d6016c538"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::output_file" ref="a4d59733effad59b54bbd4e5d6016c538" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#a4d59733effad59b54bbd4e5d6016c538">output_file</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>output file name (-o option) </p>

</div>
</div>
<a class="anchor" id="ab9e1449fd00c98428516f0b41eddcb10"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::progname" ref="ab9e1449fd00c98428516f0b41eddcb10" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>name of this program (from shell command) </p>

</div>
</div>
<a class="anchor" id="a55602ca214fb365e8deef9a73c8442e7"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::quiet" ref="a55602ca214fb365e8deef9a73c8442e7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-scan-corpus_8c.html#a55602ca214fb365e8deef9a73c8442e7">quiet</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>if set, don't show progress information on stderr </p>

<p>Referenced by <a class="el" href="cqp_8h.html#a7c30de93f06347a9bc939e324afd1472">cqp_parse_file()</a>, <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a8a60853713c55aa8ebf0904b3c26690d"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::ranges_fh" ref="a8a60853713c55aa8ebf0904b3c26690d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FILE* <a class="el" href="cwb-scan-corpus_8c.html#a8a60853713c55aa8ebf0904b3c26690d">ranges_fh</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>corresponding filehandle </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0bd5ce6ea72cb4064addfcc9a02ac3b5">get_next_range()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a187a588249b531d66f0435b4f9858ec0"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::ranges_file" ref="a187a588249b531d66f0435b4f9858ec0" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#a187a588249b531d66f0435b4f9858ec0">ranges_file</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>file with ranges to scan (pairs of corpus positions) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a5f073f0f01b14ca3b4ebd353ba487861"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::reg_dir" ref="a5f073f0f01b14ca3b4ebd353ba487861" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#a5f073f0f01b14ca3b4ebd353ba487861">reg_dir</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>registry directory (NULL -&gt; use default) </p>

<p>Referenced by <a class="el" href="cwb-scan-corpus_8c.html#a0ddf1224851353fc92bfbff6f499fa97">main()</a>, and <a class="el" href="cwb-scan-corpus_8c.html#a291e5974237485d06cc8da932a1d98a0">scancorpus_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a9f04edb60bfef6eb0626dccc88522f6e"></a><!-- doxytag: member="cwb&#45;scan&#45;corpus.c::regular_rx" ref="a9f04edb60bfef6eb0626dccc88522f6e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___c_l___regex.html">CL_Regex</a> <a class="el" href="cwb-scan-corpus_8c.html#a9f04edb60bfef6eb0626dccc88522f6e">regular_rx</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>regex object for use when check_words is true. </p>
<dl class="see"><dt><b>See also:</b></dt><dd><a class="el" href="cwb-scan-corpus_8c.html#ad40d04a47016bc8bc1aa8cbd182cdd69" title="Check regularity of a token.">is_regular</a> </dd></dl>

</div>
</div>
</div>
<hr class="footer"/><address class="footer"><small>Generated on Tue Jan 17 2012 22:07:39 for CWB by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </small></address>
</body>
</html>
