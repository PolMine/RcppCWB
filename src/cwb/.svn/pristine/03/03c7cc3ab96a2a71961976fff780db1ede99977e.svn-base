<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>CWB: utils/cwb-s-encode.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CWB</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_0fd7298e6c8649bb41921df976023b83.html">utils</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<h1>cwb-s-encode.c File Reference</h1>  </div>
</div>
<div class="contents">

<p>cwb-s-encode adds an s-attribute to an existing corpus.  
<a href="#_details">More...</a></p>
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;errno.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &lt;assert.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="globals_8h.html">../cl/globals.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="endian_8h.html">../cl/endian.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="macros_8h.html">../cl/macros.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="storage_8h.html">../cl/storage.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="lexhash_8h.html">../cl/lexhash.h</a>&quot;</code><br/>
</div><h2><a name="nested-classes"></a>
Data Structures</h2>
<ul>
<li>struct <a class="el" href="struct_sencode_range.html">SencodeRange</a>
<dl class="el"><dd class="mdescRight"><a class="el" href="struct_sencode_range.html" title="SencodeRange object - distinct from the Range object in cwb-encode.">SencodeRange</a> object - distinct from the Range object in cwb-encode.  <a href="struct_sencode_range.html#_details">More...</a><br/></dl><li>struct <a class="el" href="struct___s_l.html">_SL</a>
<dl class="el"><dd class="mdescRight">The "structure list" data type is used for 'adding' regions (-a).  <a href="struct___s_l.html#_details">More...</a><br/></dl></ul>
<h2><a name="define-members"></a>
Defines</h2>
<ul>
<li>#define <a class="el" href="cwb-s-encode_8c.html#abc83d313581e501ef608cf2bd7db2816">UMASK</a>&#160;&#160;&#160;0644
<li>#define <a class="el" href="cwb-s-encode_8c.html#a38b5fae8084025c0eec1cbe31c2b196b">RNG_RNG</a>&#160;&#160;&#160;&quot;%s&quot; SUBDIR_SEP_STRING &quot;%s.rng&quot;
<dl class="el"><dd class="mdescRight">printf format string for path of file storing ranges of given structural attribute  <a href="#a38b5fae8084025c0eec1cbe31c2b196b"></a><br/></dl><li>#define <a class="el" href="cwb-s-encode_8c.html#a6c5f9b401ab4105fad64ebfb799ba3db">RNG_AVX</a>&#160;&#160;&#160;&quot;%s&quot; SUBDIR_SEP_STRING &quot;%s.avx&quot;
<dl class="el"><dd class="mdescRight">printf format string for path of attribute value index of a given structural attribute  <a href="#a6c5f9b401ab4105fad64ebfb799ba3db"></a><br/></dl><li>#define <a class="el" href="cwb-s-encode_8c.html#ac564cf16dc29432e8cea29d765029015">RNG_AVS</a>&#160;&#160;&#160;&quot;%s&quot; SUBDIR_SEP_STRING &quot;%s.avs&quot;
<dl class="el"><dd class="mdescRight">printf format string for path of attribute values of a given structural attribute  <a href="#ac564cf16dc29432e8cea29d765029015"></a><br/></dl></ul>
<h2><a name="typedef-members"></a>
Typedefs</h2>
<ul>
<li>typedef struct <a class="el" href="struct___s_l.html">_SL</a> * <a class="el" href="cwb-s-encode_8c.html#a6db51fb20bcc8f24a25ca86a65c8f27b">SL</a>
<dl class="el"><dd class="mdescRight">The "structure list" data type is used for 'adding' regions (-a).  <a href="#a6db51fb20bcc8f24a25ca86a65c8f27b"></a><br/></dl></ul>
<h2><a name="enum-members"></a>
Enumerations</h2>
<ul>
<li>enum { <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310ab21b28beed03aa99a3374cc836da2d06">set_none</a>, 
<a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310a4999345dfb96ac99ae28a836305b1bf9">set_any</a>, 
<a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310ae140b4d011c7a2af0ed25a06d1f1013b">set_regular</a>, 
<a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310a3f80b15d355dd713c077003212e0c1e9">set_whitespace</a>
 }
</ul>
<h2><a name="func-members"></a>
Functions</h2>
<ul>
<li>void <a class="el" href="cwb-s-encode_8c.html#ab19b3c46a41fa7613d66278a52f89a05">SL_rewind</a> (void)
<dl class="el"><dd class="mdescRight">Rewind the index-pointer to the start of the global structure list.  <a href="#ab19b3c46a41fa7613d66278a52f89a05"></a><br/></dl><li><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#a72ed8263b08b9434ef2efabc0546e406">SL_next</a> (void)
<dl class="el"><dd class="mdescRight">Gets a pointer to the next available structure on the global structure list.  <a href="#a72ed8263b08b9434ef2efabc0546e406"></a><br/></dl><li><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#a8ee1353a177c2d08bdf5b41b13010d5f">SL_seek</a> (int cpos)
<dl class="el"><dd class="mdescRight">Find region containing (or preceding) cpos; NULL = start of list; sets SL_Point to returned value.  <a href="#a8ee1353a177c2d08bdf5b41b13010d5f"></a><br/></dl><li><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#aaa1fe19da0a3acca96e84533fd318722">SL_insert_after_point</a> (int start, int end, char *annot)
<dl class="el"><dd class="mdescRight">insert region [start, end, annot] after SL_Point; no overlap/position checking  <a href="#aaa1fe19da0a3acca96e84533fd318722"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#aa1140468f4b3774b2135eee4a42a78a8">SL_delete</a> (<a class="el" href="struct___s_l.html">SL</a> <a class="el" href="structitem.html">item</a>)
<dl class="el"><dd class="mdescRight">delete region from list; updates SL_Point if it happened to point at item  <a href="#aa1140468f4b3774b2135eee4a42a78a8"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#ac45ab6169870998a619acf738ee9e29e">SL_insert</a> (int start, int end, char *annot)
<dl class="el"><dd class="mdescRight">Inserts an item into the global structure list.  <a href="#ac45ab6169870998a619acf738ee9e29e"></a><br/></dl><li>int <a class="el" href="cwb-s-encode_8c.html#aea43f93c1edafd25278a2d81af0c926a">sencode_parse_line</a> (char *<a class="el" href="cwb-encode_8c.html#a41ebd28ef1d7c6ade45642cb6acc1039">line</a>, int *start, int *end, char **annot)
<dl class="el"><dd class="mdescRight">Parses an input line into cwb-s-encode.  <a href="#aea43f93c1edafd25278a2d81af0c926a"></a><br/></dl><li>char * <a class="el" href="cwb-s-encode_8c.html#ae086025f730e74cbeea39253637a55d3">sencode_check_set</a> (char *annot)
<dl class="el"><dd class="mdescRight">Changes an annotation string to standard set attribute syntax.  <a href="#ae086025f730e74cbeea39253637a55d3"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#a66462fc5630af31b0b2e973c5f22bcc6">sencode_usage</a> (void)
<dl class="el"><dd class="mdescRight">print usage message and exit  <a href="#a66462fc5630af31b0b2e973c5f22bcc6"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#afc69b400cbf699fdedc0fadcc7cc9434">sencode_declare_new_satt</a> (char *name, char *<a class="el" href="cwb-encode_8c.html#a8eadc6730ef4fbdae87a20414b789faf">directory</a>, int store_values)
<dl class="el"><dd class="mdescRight">Initialises the "new_satt" variable for the s-attribute to be encoded, and sets name/directory.  <a href="#afc69b400cbf699fdedc0fadcc7cc9434"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#a39a59a21c5377261d6b2263416a4bf79">sencode_open_files</a> (void)
<dl class="el"><dd class="mdescRight">Open disk files for the s-attribute being encoded (must have been declared first).  <a href="#a39a59a21c5377261d6b2263416a4bf79"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#ab366a68d28133bc00857295a480c4043">sencode_close_files</a> (void)
<dl class="el"><dd class="mdescRight">Close the disk files for the s-attribute being encoded.  <a href="#ab366a68d28133bc00857295a480c4043"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options</a> (int argc, char **argv)
<dl class="el"><dd class="mdescRight">Parse options and set global variables.  <a href="#af03b28b7de6e87eb57fedd7aae5d8a5b"></a><br/></dl><li>void <a class="el" href="cwb-s-encode_8c.html#aff0f32dc4c2723af6ad1905fd06a37d7">sencode_write_region</a> (int start, int end, char *annot)
<dl class="el"><dd class="mdescRight">Write data about a region to disk files (as defined in global variable new_satt).  <a href="#aff0f32dc4c2723af6ad1905fd06a37d7"></a><br/></dl><li>int <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main</a> (int argc, char **argv)
<dl class="el"><dd class="mdescRight">Main function for cwb-s-encode.  <a href="#a3c04138a5bfe5d72780bb7e82a18e627"></a><br/></dl></ul>
<h2><a name="var-members"></a>
Variables</h2>
<ul>
<li>int <a class="el" href="cwb-s-encode_8c.html#ac3e1795766a80ec63b157951b4b9a7d4">debug</a> = 0
<li>int <a class="el" href="cwb-s-encode_8c.html#a582e2ef9670c974c00e00ad10af0e629">silent</a> = 0
<dl class="el"><dd class="mdescRight">debug mode on/off  <a href="#a582e2ef9670c974c00e00ad10af0e629"></a><br/></dl><li>int <a class="el" href="cwb-s-encode_8c.html#a23a915acdf42841433fd21dbdd48989d">strip_blanks_in_values</a> = 0
<li>int <a class="el" href="cwb-s-encode_8c.html#a9cdf89a4e98f37e877bff8ead279aa1d">set_syntax_strict</a> = 0
<dl class="el"><dd class="mdescRight">check that set attributes are always given in the same syntax  <a href="#a9cdf89a4e98f37e877bff8ead279aa1d"></a><br/></dl><li>int <a class="el" href="cwb-s-encode_8c.html#a1d6a5242139200aaa955588acf9a6010">in_memory</a> = 0
<dl class="el"><dd class="mdescRight">create list of regions in memory (allowing non-linear input), then write to disk  <a href="#a1d6a5242139200aaa955588acf9a6010"></a><br/></dl><li>int <a class="el" href="cwb-s-encode_8c.html#aea6cb9df1a9a5552a38bdd163a15f84e">add_to_existing</a> = 0
<dl class="el"><dd class="mdescRight">add to existing attribute: implies in_memory; existing regions are automatically inserted at startup  <a href="#aea6cb9df1a9a5552a38bdd163a15f84e"></a><br/></dl><li>FILE * <a class="el" href="cwb-s-encode_8c.html#a6bbbb0963299134a3c610fe69d0f74c9">text_fd</a> = NULL
<dl class="el"><dd class="mdescRight">stream handle for file to read from.  <a href="#a6bbbb0963299134a3c610fe69d0f74c9"></a><br/></dl><li><a class="el" href="struct_t_corpus.html">Corpus</a> * <a class="el" href="cwb-s-encode_8c.html#aca3a1fb765418f9b9b1d74051aa88667">corpus</a> = NULL
<dl class="el"><dd class="mdescRight">corpus we're working on; at the moment, this is only required for add_to_existing  <a href="#aca3a1fb765418f9b9b1d74051aa88667"></a><br/></dl><li>enum  { ... }  <a class="el" href="cwb-s-encode_8c.html#a98c765d283883dcb529f6059f3bded4b">set_att</a>
<dl class="el"><dd class="mdescRight">feature-set attributes: type of.  <a href="#a98c765d283883dcb529f6059f3bded4b"></a><br/></dl><li><a class="el" href="struct_sencode_range.html">SencodeRange</a> <a class="el" href="cwb-s-encode_8c.html#af15129d3b4610f84da78c93ecc2eeec9">new_satt</a>
<dl class="el"><dd class="mdescRight">Global (and only) instance of the cwb-s-encode <a class="el" href="struct_sencode_range.html" title="SencodeRange object - distinct from the Range object in cwb-encode.">SencodeRange</a> object.  <a href="#af15129d3b4610f84da78c93ecc2eeec9"></a><br/></dl><li>char * <a class="el" href="cwb-s-encode_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a> = NULL
<li><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#a40df5e868c98dc5e6e0ed930050c3ce7">StructureList</a> = NULL
<dl class="el"><dd class="mdescRight">(single) global list  <a href="#a40df5e868c98dc5e6e0ed930050c3ce7"></a><br/></dl><li><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#a968fc708fd6326af911bc2a8902b8efc">SL_Point</a> = NULL
<dl class="el"><dd class="mdescRight">pointer into global list; NULL = start of list; linear search starts from SL_Point  <a href="#a968fc708fd6326af911bc2a8902b8efc"></a><br/></dl><li><a class="el" href="struct__cl__lexhash.html">cl_lexhash</a> <a class="el" href="cwb-s-encode_8c.html#a73978b41d14faf74b908565f779bf695">LH</a> = NULL
<dl class="el"><dd class="mdescRight">Lexhash used when writing regions, to avoid multiple copies of annotations (-m mode)  <a href="#a73978b41d14faf74b908565f779bf695"></a><br/></dl></ul>
<hr/><a name="_details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>cwb-s-encode adds an s-attribute to an existing corpus. </p>
<p>Input: a list of regions (on stdin or in the file specified in the first argument to the program name) with lines in the following format:</p>
<p>start TAB end [ TAB annotation ]</p>
<p>start = corpus position of first token in region (integer as text) end = corpus position of last token in region (integer as text) annotation = annotation text (only if s-attribute was specified with -V)</p>
<p>Output: file att.rng (plus att.avs, att.avx for -V attributes) where att is the specified attribute name. </p>
</div><hr/><h2>Define Documentation</h2>
<a class="anchor" id="ac564cf16dc29432e8cea29d765029015"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::RNG_AVS" ref="ac564cf16dc29432e8cea29d765029015" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RNG_AVS&#160;&#160;&#160;&quot;%s&quot; SUBDIR_SEP_STRING &quot;%s.avs&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>printf format string for path of attribute values of a given structural attribute </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a39a59a21c5377261d6b2263416a4bf79">sencode_open_files()</a>.</p>

</div>
</div>
<a class="anchor" id="a6c5f9b401ab4105fad64ebfb799ba3db"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::RNG_AVX" ref="a6c5f9b401ab4105fad64ebfb799ba3db" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RNG_AVX&#160;&#160;&#160;&quot;%s&quot; SUBDIR_SEP_STRING &quot;%s.avx&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>printf format string for path of attribute value index of a given structural attribute </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a39a59a21c5377261d6b2263416a4bf79">sencode_open_files()</a>.</p>

</div>
</div>
<a class="anchor" id="a38b5fae8084025c0eec1cbe31c2b196b"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::RNG_RNG" ref="a38b5fae8084025c0eec1cbe31c2b196b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define RNG_RNG&#160;&#160;&#160;&quot;%s&quot; SUBDIR_SEP_STRING &quot;%s.rng&quot;</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>printf format string for path of file storing ranges of given structural attribute </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a39a59a21c5377261d6b2263416a4bf79">sencode_open_files()</a>.</p>

</div>
</div>
<a class="anchor" id="abc83d313581e501ef608cf2bd7db2816"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::UMASK" ref="abc83d313581e501ef608cf2bd7db2816" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UMASK&#160;&#160;&#160;0644</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="a6db51fb20bcc8f24a25ca86a65c8f27b"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL" ref="a6db51fb20bcc8f24a25ca86a65c8f27b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct___s_l.html">_SL</a> * <a class="el" href="struct___s_l.html">SL</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The "structure list" data type is used for 'adding' regions (-a). </p>
<p>SL is a really bad name; should be "RegionList".</p>
<p>In this case, all existing regions are read into an ordered, bidirectional list; new regions are inserted into that list (overlaps are automatically resolved in favour of the 'earlier' region; if start point is identical, the longer region is retained). Only once the entire input has been read is the data actually encoded and stored on disk. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="a94798fdadfbf49a7c658ace669a1d310"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::@24" ref="a94798fdadfbf49a7c658ace669a1d310" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div>
<div class="memdoc">
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a94798fdadfbf49a7c658ace669a1d310ab21b28beed03aa99a3374cc836da2d06"></a><!-- doxytag: member="set_none" ref="a94798fdadfbf49a7c658ace669a1d310ab21b28beed03aa99a3374cc836da2d06" args="" -->set_none</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a94798fdadfbf49a7c658ace669a1d310a4999345dfb96ac99ae28a836305b1bf9"></a><!-- doxytag: member="set_any" ref="a94798fdadfbf49a7c658ace669a1d310a4999345dfb96ac99ae28a836305b1bf9" args="" -->set_any</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a94798fdadfbf49a7c658ace669a1d310ae140b4d011c7a2af0ed25a06d1f1013b"></a><!-- doxytag: member="set_regular" ref="a94798fdadfbf49a7c658ace669a1d310ae140b4d011c7a2af0ed25a06d1f1013b" args="" -->set_regular</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a94798fdadfbf49a7c658ace669a1d310a3f80b15d355dd713c077003212e0c1e9"></a><!-- doxytag: member="set_whitespace" ref="a94798fdadfbf49a7c658ace669a1d310a3f80b15d355dd713c077003212e0c1e9" args="" -->set_whitespace</em>&nbsp;</td><td>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a3c04138a5bfe5d72780bb7e82a18e627"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::main" ref="a3c04138a5bfe5d72780bb7e82a18e627" args="(int argc, char **argv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int main </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Main function for cwb-s-encode. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">argc</td><td>Number of command-line arguments. </td></tr>
    <tr><td class="paramname">argv</td><td>Command-line arguments. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="cwb-s-encode_8c.html#aea6cb9df1a9a5552a38bdd163a15f84e">add_to_existing</a>, <a class="el" href="struct___s_l.html#a3b3be9087a468fe688fe72b348317b70">_SL::annot</a>, <a class="el" href="cl_8h.html#a81874b84793891ea3b8db58061820f1e">ATT_STRUC</a>, <a class="el" href="cwb-itoa_8c.html#ac1ed595d526b1beccae8e324475d61ea">buf</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="cl_8h.html#ad68dfe0ca2fbad5052e8213a06f5b4ba">CL_MAX_LINE_LENGTH</a>, <a class="el" href="cdaccess_8c.html#a95ec41c7bd08fce95418a10c0d5c2da2">cl_max_struc()</a>, <a class="el" href="cl_8h.html#ae9e879605cdbdafc2a8939ae590b6aa0">cl_new_attribute</a>, <a class="el" href="cdaccess_8c.html#af0793556b93840555bca436b399a00bd">cl_struc2cpos()</a>, <a class="el" href="cdaccess_8c.html#a68c164c901d2ec3304e981bc85320bf5">cl_struc2str()</a>, <a class="el" href="cdaccess_8c.html#a43a3631745e05f8fafe5006141d57663">cl_struc_values()</a>, <a class="el" href="cwb-compress-rdx_8c.html#ac3e1795766a80ec63b157951b4b9a7d4">debug</a>, <a class="el" href="struct___s_l.html#abce9f5dc9c83f2639b72024fdee5d388">_SL::end</a>, <a class="el" href="cwb-s-encode_8c.html#a1d6a5242139200aaa955588acf9a6010">in_memory</a>, <a class="el" href="cwb-encode_8c.html#a7f6d753f865d5986713ec8a65679993d">input_line</a>, <a class="el" href="struct_sencode_range.html#af763c756953f5d71796b837caa7f94c3">SencodeRange::last_cpos</a>, <a class="el" href="struct_sencode_range.html#a5ac083a645d964373f022d03df4849c8">SencodeRange::name</a>, <a class="el" href="options_8h.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>, <a class="el" href="cwb-s-encode_8c.html#ae086025f730e74cbeea39253637a55d3">sencode_check_set()</a>, <a class="el" href="cwb-s-encode_8c.html#ab366a68d28133bc00857295a480c4043">sencode_close_files()</a>, <a class="el" href="cwb-s-encode_8c.html#aea43f93c1edafd25278a2d81af0c926a">sencode_parse_line()</a>, <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>, <a class="el" href="cwb-s-encode_8c.html#aff0f32dc4c2723af6ad1905fd06a37d7">sencode_write_region()</a>, <a class="el" href="cwb-s-encode_8c.html#a98c765d283883dcb529f6059f3bded4b">set_att</a>, <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310ab21b28beed03aa99a3374cc836da2d06">set_none</a>, <a class="el" href="options_8h.html#a582e2ef9670c974c00e00ad10af0e629">silent</a>, <a class="el" href="cwb-s-encode_8c.html#ac45ab6169870998a619acf738ee9e29e">SL_insert()</a>, <a class="el" href="cwb-s-encode_8c.html#a72ed8263b08b9434ef2efabc0546e406">SL_next()</a>, <a class="el" href="cwb-s-encode_8c.html#ab19b3c46a41fa7613d66278a52f89a05">SL_rewind()</a>, <a class="el" href="struct___s_l.html#a37722a150250e2a5a98e5e0d11e53449">_SL::start</a>, <a class="el" href="struct_sencode_range.html#a840e275845c4374a4384021cb20a3eb4">SencodeRange::store_values</a>, and <a class="el" href="cwb-s-encode_8c.html#a6bbbb0963299134a3c610fe69d0f74c9">text_fd</a>.</p>

</div>
</div>
<a class="anchor" id="ae086025f730e74cbeea39253637a55d3"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_check_set" ref="ae086025f730e74cbeea39253637a55d3" args="(char *annot)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* sencode_check_set </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>annot</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Changes an annotation string to standard set attribute syntax. </p>
<p>On first call, the function checks whether annotations are already given in standard '|'-delimited form; otherwise we assume we are using whitespace to split.</p>
<p>The return string may have been newly allocated (i.e. caller must use &amp; free the returned value).</p>
<p>If there are syntax errors, returns NULL.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">annot</td><td>The annotation string to check. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>The standardised string, or NULL if there was an error in the call to <a class="el" href="attributes_8c.html#a8e1d05d565a13c56790b5dd35d144d49" title="Generates a set attribute value.">cl_make_set()</a>. </dd></dl>

<p>References <a class="el" href="struct___s_l.html#a3b3be9087a468fe688fe72b348317b70">_SL::annot</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="attributes_8c.html#a8e1d05d565a13c56790b5dd35d144d49">cl_make_set()</a>, <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310a4999345dfb96ac99ae28a836305b1bf9">set_any</a>, <a class="el" href="cwb-s-encode_8c.html#a98c765d283883dcb529f6059f3bded4b">set_att</a>, <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310ab21b28beed03aa99a3374cc836da2d06">set_none</a>, <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310ae140b4d011c7a2af0ed25a06d1f1013b">set_regular</a>, <a class="el" href="cwb-s-encode_8c.html#a9cdf89a4e98f37e877bff8ead279aa1d">set_syntax_strict</a>, and <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310a3f80b15d355dd713c077003212e0c1e9">set_whitespace</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="ab366a68d28133bc00857295a480c4043"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_close_files" ref="ab366a68d28133bc00857295a480c4043" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sencode_close_files </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Close the disk files for the s-attribute being encoded. </p>

<p>References <a class="el" href="struct_sencode_range.html#a00ab813696887d5d4d44ed94b8656b22">SencodeRange::avs</a>, <a class="el" href="struct_sencode_range.html#a67794439930965560937a2118457f964">SencodeRange::avx</a>, <a class="el" href="struct_sencode_range.html#a600b792d6d2ff2e71096dfa60d97a3b0">SencodeRange::fd</a>, and <a class="el" href="struct_sencode_range.html#a4adb4fb035eed17910c98225be64ec83">SencodeRange::ready</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="afc69b400cbf699fdedc0fadcc7cc9434"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_declare_new_satt" ref="afc69b400cbf699fdedc0fadcc7cc9434" args="(char *name, char *directory, int store_values)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sencode_declare_new_satt </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>directory</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>store_values</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Initialises the "new_satt" variable for the s-attribute to be encoded, and sets name/directory. </p>

<p>References <a class="el" href="struct_sencode_range.html#a00ab813696887d5d4d44ed94b8656b22">SencodeRange::avs</a>, <a class="el" href="struct_sencode_range.html#a67794439930965560937a2118457f964">SencodeRange::avx</a>, <a class="el" href="cl_8h.html#a6647d75d1d69c7d25447da514b7e4682">cl_strdup()</a>, <a class="el" href="struct_sencode_range.html#a73da71b9c136e698a3ccaa1366e455a8">SencodeRange::dir</a>, <a class="el" href="struct_sencode_range.html#a600b792d6d2ff2e71096dfa60d97a3b0">SencodeRange::fd</a>, <a class="el" href="struct_sencode_range.html#af763c756953f5d71796b837caa7f94c3">SencodeRange::last_cpos</a>, <a class="el" href="struct_sencode_range.html#a5ac083a645d964373f022d03df4849c8">SencodeRange::name</a>, <a class="el" href="struct_sencode_range.html#a86cf672daa4e0ad11ad10efc894d19c8">SencodeRange::num</a>, <a class="el" href="struct_sencode_range.html#aed7ea92f45bd273dde380a45ddced592">SencodeRange::offset</a>, <a class="el" href="struct_sencode_range.html#a4adb4fb035eed17910c98225be64ec83">SencodeRange::ready</a>, and <a class="el" href="struct_sencode_range.html#a840e275845c4374a4384021cb20a3eb4">SencodeRange::store_values</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a39a59a21c5377261d6b2263416a4bf79"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_open_files" ref="a39a59a21c5377261d6b2263416a4bf79" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sencode_open_files </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Open disk files for the s-attribute being encoded (must have been declared first). </p>

<p>References <a class="el" href="struct_sencode_range.html#a00ab813696887d5d4d44ed94b8656b22">SencodeRange::avs</a>, <a class="el" href="struct_sencode_range.html#a67794439930965560937a2118457f964">SencodeRange::avx</a>, <a class="el" href="cwb-itoa_8c.html#ac1ed595d526b1beccae8e324475d61ea">buf</a>, <a class="el" href="cl_8h.html#ad68dfe0ca2fbad5052e8213a06f5b4ba">CL_MAX_LINE_LENGTH</a>, <a class="el" href="struct_sencode_range.html#a73da71b9c136e698a3ccaa1366e455a8">SencodeRange::dir</a>, <a class="el" href="struct_sencode_range.html#a600b792d6d2ff2e71096dfa60d97a3b0">SencodeRange::fd</a>, <a class="el" href="struct_sencode_range.html#a5ac083a645d964373f022d03df4849c8">SencodeRange::name</a>, <a class="el" href="struct_sencode_range.html#a4adb4fb035eed17910c98225be64ec83">SencodeRange::ready</a>, <a class="el" href="cwb-s-encode_8c.html#ac564cf16dc29432e8cea29d765029015">RNG_AVS</a>, <a class="el" href="cwb-s-encode_8c.html#a6c5f9b401ab4105fad64ebfb799ba3db">RNG_AVX</a>, <a class="el" href="cwb-s-encode_8c.html#a38b5fae8084025c0eec1cbe31c2b196b">RNG_RNG</a>, and <a class="el" href="struct_sencode_range.html#a840e275845c4374a4384021cb20a3eb4">SencodeRange::store_values</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#aff0f32dc4c2723af6ad1905fd06a37d7">sencode_write_region()</a>.</p>

</div>
</div>
<a class="anchor" id="aea43f93c1edafd25278a2d81af0c926a"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_parse_line" ref="aea43f93c1edafd25278a2d81af0c926a" args="(char *line, int *start, int *end, char **annot)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int sencode_parse_line </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>line</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>annot</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Parses an input line into cwb-s-encode. </p>
<p>Usage:</p>
<p>ok = <a class="el" href="cwb-s-encode_8c.html#aea43f93c1edafd25278a2d81af0c926a" title="Parses an input line into cwb-s-encode.">sencode_parse_line(char *line, int *start, int *end, char **annot)</a>;</p>
<p>Expects standard TAB-separated format; first two fields must be numbers, optional third field is returned in annot - if not present, annot is set to NULL.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">line</td><td>The line to be parsed. </td></tr>
    <tr><td class="paramname">start</td><td>Location for the start cpos. </td></tr>
    <tr><td class="paramname">end</td><td>Location for the end cos. </td></tr>
    <tr><td class="paramname">annot</td><td>Location for the annotation string. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean; true for all OK, false for error. </dd></dl>

<p>References <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, and <a class="el" href="cl_8h.html#a6647d75d1d69c7d25447da514b7e4682">cl_strdup()</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="af03b28b7de6e87eb57fedd7aae5d8a5b"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_parse_options" ref="af03b28b7de6e87eb57fedd7aae5d8a5b" args="(int argc, char **argv)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sencode_parse_options </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>argc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char **&#160;</td>
          <td class="paramname"><em>argv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Parse options and set global variables. </p>

<p>References <a class="el" href="cwb-s-encode_8c.html#aea6cb9df1a9a5552a38bdd163a15f84e">add_to_existing</a>, <a class="el" href="cl_8h.html#aee476e23a98efac85d9a9288f18fe686">cl_new_corpus()</a>, <a class="el" href="cwb-compress-rdx_8c.html#ac3e1795766a80ec63b157951b4b9a7d4">debug</a>, <a class="el" href="cwb-encode_8c.html#a8eadc6730ef4fbdae87a20414b789faf">directory</a>, <a class="el" href="cwb-s-encode_8c.html#a1d6a5242139200aaa955588acf9a6010">in_memory</a>, <a class="el" href="struct_sencode_range.html#a5ac083a645d964373f022d03df4849c8">SencodeRange::name</a>, <a class="el" href="options_8h.html#ab6be6986e1a07fc76b7a5a77aa7cc43b">registry</a>, <a class="el" href="cwb-s-encode_8c.html#afc69b400cbf699fdedc0fadcc7cc9434">sencode_declare_new_satt()</a>, <a class="el" href="cwb-s-encode_8c.html#a66462fc5630af31b0b2e973c5f22bcc6">sencode_usage()</a>, <a class="el" href="cwb-s-encode_8c.html#a94798fdadfbf49a7c658ace669a1d310a4999345dfb96ac99ae28a836305b1bf9">set_any</a>, <a class="el" href="cwb-s-encode_8c.html#a98c765d283883dcb529f6059f3bded4b">set_att</a>, <a class="el" href="cwb-s-encode_8c.html#a9cdf89a4e98f37e877bff8ead279aa1d">set_syntax_strict</a>, <a class="el" href="options_8h.html#a582e2ef9670c974c00e00ad10af0e629">silent</a>, <a class="el" href="cwb-s-encode_8c.html#a23a915acdf42841433fd21dbdd48989d">strip_blanks_in_values</a>, and <a class="el" href="cwb-s-encode_8c.html#a6bbbb0963299134a3c610fe69d0f74c9">text_fd</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a66462fc5630af31b0b2e973c5f22bcc6"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_usage" ref="a66462fc5630af31b0b2e973c5f22bcc6" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sencode_usage </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>print usage message and exit </p>

<p>References <a class="el" href="options_8h.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a>, and <a class="el" href="globals_8h.html#a1c6d5de492ac61ad29aec7aa9a436bbf">VERSION</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="aff0f32dc4c2723af6ad1905fd06a37d7"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::sencode_write_region" ref="aff0f32dc4c2723af6ad1905fd06a37d7" args="(int start, int end, char *annot)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sencode_write_region </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>annot</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Write data about a region to disk files (as defined in global variable new_satt). </p>

<p>References <a class="el" href="struct_sencode_range.html#a00ab813696887d5d4d44ed94b8656b22">SencodeRange::avs</a>, <a class="el" href="struct_sencode_range.html#a67794439930965560937a2118457f964">SencodeRange::avx</a>, <a class="el" href="cl_8h.html#a02b492683c9ea02da72c5716120d95f7">cl_lexhash_add()</a>, <a class="el" href="cl_8h.html#a40ecd11b83d5d4e90a47dbbc448de7e2">cl_lexhash_find()</a>, <a class="el" href="cl_8h.html#a44f2692c5af7f16fc46640e31c7ae192">cl_new_lexhash()</a>, <a class="el" href="struct__cl__lexhash__entry.html#a22cfc15110f0fbe32289d1946195400b">_cl_lexhash_entry::data</a>, <a class="el" href="struct___s_l.html#abce9f5dc9c83f2639b72024fdee5d388">_SL::end</a>, <a class="el" href="struct_sencode_range.html#a600b792d6d2ff2e71096dfa60d97a3b0">SencodeRange::fd</a>, <a class="el" href="struct__cl__lexhash__entry.html#a7441ef0865bcb3db9b8064dd7375c1ea">_cl_lexhash_entry::id</a>, <a class="el" href="struct__cl__lexhash__entry_1_1__cl__lexhash__entry__data.html#adece183191b0e700e039e59101e06105">_cl_lexhash_entry::_cl_lexhash_entry_data::integer</a>, <a class="el" href="struct_sencode_range.html#af763c756953f5d71796b837caa7f94c3">SencodeRange::last_cpos</a>, <a class="el" href="struct_sencode_range.html#a86cf672daa4e0ad11ad10efc894d19c8">SencodeRange::num</a>, <a class="el" href="storage_8c.html#a8b3939b07c9383d22e90973183f655ef">NwriteInt()</a>, <a class="el" href="struct_sencode_range.html#aed7ea92f45bd273dde380a45ddced592">SencodeRange::offset</a>, <a class="el" href="struct_sencode_range.html#a4adb4fb035eed17910c98225be64ec83">SencodeRange::ready</a>, <a class="el" href="cwb-s-encode_8c.html#a39a59a21c5377261d6b2263416a4bf79">sencode_open_files()</a>, and <a class="el" href="struct_sencode_range.html#a840e275845c4374a4384021cb20a3eb4">SencodeRange::store_values</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="aa1140468f4b3774b2135eee4a42a78a8"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_delete" ref="aa1140468f4b3774b2135eee4a42a78a8" args="(SL item)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SL_delete </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct___s_l.html">SL</a>&#160;</td>
          <td class="paramname"><em>item</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>delete region from list; updates SL_Point if it happened to point at item </p>

<p>References <a class="el" href="struct___s_l.html#a3b3be9087a468fe688fe72b348317b70">_SL::annot</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="struct___s_l.html#a0560490d232c720e5d5cd0d9ba5575d5">_SL::next</a>, and <a class="el" href="struct___s_l.html#a27056cdc7363a3cc19e1579d3f4376dd">_SL::prev</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#ac45ab6169870998a619acf738ee9e29e">SL_insert()</a>.</p>

</div>
</div>
<a class="anchor" id="ac45ab6169870998a619acf738ee9e29e"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_insert" ref="ac45ab6169870998a619acf738ee9e29e" args="(int start, int end, char *annot)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SL_insert </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>annot</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Inserts an item into the global structure list. </p>
<p>It adds a new region to the list: its start point, its end point, its annotation.</p>
<p>Combines <a class="el" href="cwb-s-encode_8c.html#a8ee1353a177c2d08bdf5b41b13010d5f" title="Find region containing (or preceding) cpos; NULL = start of list; sets SL_Point to returned value...">SL_seek()</a>, SL_insert_at_point() and ambiguity resolution. </p>

<p>References <a class="el" href="struct___s_l.html#abce9f5dc9c83f2639b72024fdee5d388">_SL::end</a>, <a class="el" href="struct___s_l.html#a0560490d232c720e5d5cd0d9ba5575d5">_SL::next</a>, <a class="el" href="cwb-s-encode_8c.html#aa1140468f4b3774b2135eee4a42a78a8">SL_delete()</a>, <a class="el" href="cwb-s-encode_8c.html#aaa1fe19da0a3acca96e84533fd318722">SL_insert_after_point()</a>, <a class="el" href="cwb-s-encode_8c.html#a8ee1353a177c2d08bdf5b41b13010d5f">SL_seek()</a>, and <a class="el" href="struct___s_l.html#a37722a150250e2a5a98e5e0d11e53449">_SL::start</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="aaa1fe19da0a3acca96e84533fd318722"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_insert_after_point" ref="aaa1fe19da0a3acca96e84533fd318722" args="(int start, int end, char *annot)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___s_l.html">SL</a> SL_insert_after_point </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>end</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>annot</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>insert region [start, end, annot] after SL_Point; no overlap/position checking </p>

<p>References <a class="el" href="struct___s_l.html#a3b3be9087a468fe688fe72b348317b70">_SL::annot</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="cl_8h.html#a6647d75d1d69c7d25447da514b7e4682">cl_strdup()</a>, <a class="el" href="struct___s_l.html#abce9f5dc9c83f2639b72024fdee5d388">_SL::end</a>, <a class="el" href="struct___s_l.html#a0560490d232c720e5d5cd0d9ba5575d5">_SL::next</a>, <a class="el" href="struct___s_l.html#a27056cdc7363a3cc19e1579d3f4376dd">_SL::prev</a>, <a class="el" href="cwb-s-encode_8c.html#a968fc708fd6326af911bc2a8902b8efc">SL_Point</a>, <a class="el" href="struct___s_l.html#a37722a150250e2a5a98e5e0d11e53449">_SL::start</a>, and <a class="el" href="cwb-s-encode_8c.html#a40df5e868c98dc5e6e0ed930050c3ce7">StructureList</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#ac45ab6169870998a619acf738ee9e29e">SL_insert()</a>.</p>

</div>
</div>
<a class="anchor" id="a72ed8263b08b9434ef2efabc0546e406"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_next" ref="a72ed8263b08b9434ef2efabc0546e406" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___s_l.html">SL</a> SL_next </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Gets a pointer to the next available structure on the global structure list. </p>
<p>Returns NULL if we're at the end of the list.text </p>

<p>References <a class="el" href="struct___s_l.html#a0560490d232c720e5d5cd0d9ba5575d5">_SL::next</a>, and <a class="el" href="cwb-s-encode_8c.html#a968fc708fd6326af911bc2a8902b8efc">SL_Point</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="ab19b3c46a41fa7613d66278a52f89a05"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_rewind" ref="ab19b3c46a41fa7613d66278a52f89a05" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void SL_rewind </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Rewind the index-pointer to the start of the global structure list. </p>

<p>References <a class="el" href="cwb-s-encode_8c.html#a40df5e868c98dc5e6e0ed930050c3ce7">StructureList</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>.</p>

</div>
</div>
<a class="anchor" id="a8ee1353a177c2d08bdf5b41b13010d5f"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_seek" ref="a8ee1353a177c2d08bdf5b41b13010d5f" args="(int cpos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___s_l.html">SL</a> SL_seek </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cpos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Find region containing (or preceding) cpos; NULL = start of list; sets SL_Point to returned value. </p>

<p>References <a class="el" href="struct___s_l.html#abce9f5dc9c83f2639b72024fdee5d388">_SL::end</a>, <a class="el" href="struct___s_l.html#a0560490d232c720e5d5cd0d9ba5575d5">_SL::next</a>, <a class="el" href="struct___s_l.html#a27056cdc7363a3cc19e1579d3f4376dd">_SL::prev</a>, <a class="el" href="cwb-s-encode_8c.html#a968fc708fd6326af911bc2a8902b8efc">SL_Point</a>, <a class="el" href="struct___s_l.html#a37722a150250e2a5a98e5e0d11e53449">_SL::start</a>, and <a class="el" href="cwb-s-encode_8c.html#a40df5e868c98dc5e6e0ed930050c3ce7">StructureList</a>.</p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#ac45ab6169870998a619acf738ee9e29e">SL_insert()</a>.</p>

</div>
</div>
<hr/><h2>Variable Documentation</h2>
<a class="anchor" id="aea6cb9df1a9a5552a38bdd163a15f84e"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::add_to_existing" ref="aea6cb9df1a9a5552a38bdd163a15f84e" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-s-encode_8c.html#aea6cb9df1a9a5552a38bdd163a15f84e">add_to_existing</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>add to existing attribute: implies in_memory; existing regions are automatically inserted at startup </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>, and <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="aca3a1fb765418f9b9b1d74051aa88667"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::corpus" ref="aca3a1fb765418f9b9b1d74051aa88667" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_t_corpus.html">Corpus</a>* <a class="el" href="cwb-s-encode_8c.html#aca3a1fb765418f9b9b1d74051aa88667">corpus</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>corpus we're working on; at the moment, this is only required for add_to_existing </p>

</div>
</div>
<a class="anchor" id="ac3e1795766a80ec63b157951b4b9a7d4"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::debug" ref="ac3e1795766a80ec63b157951b4b9a7d4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-s-encode_8c.html#ac3e1795766a80ec63b157951b4b9a7d4">debug</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a1d6a5242139200aaa955588acf9a6010"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::in_memory" ref="a1d6a5242139200aaa955588acf9a6010" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-s-encode_8c.html#a1d6a5242139200aaa955588acf9a6010">in_memory</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>create list of regions in memory (allowing non-linear input), then write to disk </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>, and <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a73978b41d14faf74b908565f779bf695"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::LH" ref="a73978b41d14faf74b908565f779bf695" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__cl__lexhash.html">cl_lexhash</a> <a class="el" href="cwb-s-encode_8c.html#a73978b41d14faf74b908565f779bf695">LH</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Lexhash used when writing regions, to avoid multiple copies of annotations (-m mode) </p>

</div>
</div>
<a class="anchor" id="af15129d3b4610f84da78c93ecc2eeec9"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::new_satt" ref="af15129d3b4610f84da78c93ecc2eeec9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_sencode_range.html">SencodeRange</a> <a class="el" href="cwb-s-encode_8c.html#af15129d3b4610f84da78c93ecc2eeec9">new_satt</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Global (and only) instance of the cwb-s-encode <a class="el" href="struct_sencode_range.html" title="SencodeRange object - distinct from the Range object in cwb-encode.">SencodeRange</a> object. </p>
<p>Contains information on the new s-attribute being coded. </p>

</div>
</div>
<a class="anchor" id="ab9e1449fd00c98428516f0b41eddcb10"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::progname" ref="ab9e1449fd00c98428516f0b41eddcb10" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char* <a class="el" href="cwb-scan-corpus_8c.html#ab9e1449fd00c98428516f0b41eddcb10">progname</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a98c765d283883dcb529f6059f3bded4b"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::set_att" ref="a98c765d283883dcb529f6059f3bded4b" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum { ... }   <a class="el" href="cwb-s-encode_8c.html#a98c765d283883dcb529f6059f3bded4b">set_att</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>feature-set attributes: type of. </p>
<p>Initial value: not a feature set. Changes to set_any once we know we are dealing with a feature set. Changes to set_regular or set_whitespace once we know which format of f.s. it is. </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>, <a class="el" href="cwb-s-encode_8c.html#ae086025f730e74cbeea39253637a55d3">sencode_check_set()</a>, and <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a9cdf89a4e98f37e877bff8ead279aa1d"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::set_syntax_strict" ref="a9cdf89a4e98f37e877bff8ead279aa1d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-s-encode_8c.html#a9cdf89a4e98f37e877bff8ead279aa1d">set_syntax_strict</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>check that set attributes are always given in the same syntax </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#ae086025f730e74cbeea39253637a55d3">sencode_check_set()</a>, and <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a582e2ef9670c974c00e00ad10af0e629"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::silent" ref="a582e2ef9670c974c00e00ad10af0e629" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-s-encode_8c.html#a582e2ef9670c974c00e00ad10af0e629">silent</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>debug mode on/off </p>
<p>avoid messages in -M / -a modes </p>

</div>
</div>
<a class="anchor" id="a968fc708fd6326af911bc2a8902b8efc"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::SL_Point" ref="a968fc708fd6326af911bc2a8902b8efc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#a968fc708fd6326af911bc2a8902b8efc">SL_Point</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>pointer into global list; NULL = start of list; linear search starts from SL_Point </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#aaa1fe19da0a3acca96e84533fd318722">SL_insert_after_point()</a>, <a class="el" href="cwb-s-encode_8c.html#a72ed8263b08b9434ef2efabc0546e406">SL_next()</a>, and <a class="el" href="cwb-s-encode_8c.html#a8ee1353a177c2d08bdf5b41b13010d5f">SL_seek()</a>.</p>

</div>
</div>
<a class="anchor" id="a23a915acdf42841433fd21dbdd48989d"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::strip_blanks_in_values" ref="a23a915acdf42841433fd21dbdd48989d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int <a class="el" href="cwb-s-encode_8c.html#a23a915acdf42841433fd21dbdd48989d">strip_blanks_in_values</a> = 0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
<a class="anchor" id="a40df5e868c98dc5e6e0ed930050c3ce7"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::StructureList" ref="a40df5e868c98dc5e6e0ed930050c3ce7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___s_l.html">SL</a> <a class="el" href="cwb-s-encode_8c.html#a40df5e868c98dc5e6e0ed930050c3ce7">StructureList</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>(single) global list </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#aaa1fe19da0a3acca96e84533fd318722">SL_insert_after_point()</a>, <a class="el" href="cwb-s-encode_8c.html#ab19b3c46a41fa7613d66278a52f89a05">SL_rewind()</a>, and <a class="el" href="cwb-s-encode_8c.html#a8ee1353a177c2d08bdf5b41b13010d5f">SL_seek()</a>.</p>

</div>
</div>
<a class="anchor" id="a6bbbb0963299134a3c610fe69d0f74c9"></a><!-- doxytag: member="cwb&#45;s&#45;encode.c::text_fd" ref="a6bbbb0963299134a3c610fe69d0f74c9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">FILE* <a class="el" href="cwb-s-encode_8c.html#a6bbbb0963299134a3c610fe69d0f74c9">text_fd</a> = NULL</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>stream handle for file to read from. </p>

<p>Referenced by <a class="el" href="cwb-s-encode_8c.html#a3c04138a5bfe5d72780bb7e82a18e627">main()</a>, and <a class="el" href="cwb-s-encode_8c.html#af03b28b7de6e87eb57fedd7aae5d8a5b">sencode_parse_options()</a>.</p>

</div>
</div>
</div>
<hr class="footer"/><address class="footer"><small>Generated on Tue Jan 17 2012 22:07:39 for CWB by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </small></address>
</body>
</html>
