<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>CWB: cqp/symtab.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CWB</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_13ae6852ddc98ae3021a851cfae7ef8b.html">cqp</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>symtab.c File Reference</h1>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br/>
<code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;string.h&gt;</code><br/>
<code>#include &lt;assert.h&gt;</code><br/>
<code>#include &quot;<a class="el" href="macros_8h.html">../cl/macros.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="symtab_8h.html">symtab.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="output_8h.html">output.h</a>&quot;</code><br/>
</div><h2><a name="func-members"></a>
Functions</h2>
<ul>
<li>void <a class="el" href="symtab_8c.html#a253b1729b8cea8310482910a7a995941">free_labellist</a> (<a class="el" href="struct__label__entry.html">LabelEntry</a> l)
<dl class="el"><dd class="mdescRight">Frees the whole of a linked list of labels entries.  <a href="#a253b1729b8cea8310482910a7a995941"></a><br/></dl><li><a class="el" href="struct__symbol__table.html">SymbolTable</a> <a class="el" href="symtab_8c.html#aaaefbb8e4ef2ee9d47483bfe113f4a46">new_symbol_table</a> (void)
<dl class="el"><dd class="mdescRight">create new symbol table  <a href="#aaaefbb8e4ef2ee9d47483bfe113f4a46"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#a88f028926f1ee3949b53176f8fb52503">delete_symbol_table</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st)
<dl class="el"><dd class="mdescRight">delete symbol table (free all entries)  <a href="#a88f028926f1ee3949b53176f8fb52503"></a><br/></dl><li><a class="el" href="struct__label__entry.html">LabelEntry</a> <a class="el" href="symtab_8c.html#a5f268916937d60f062425639f44297aa">findlabel</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st, char *s, int flags)
<dl class="el"><dd class="mdescRight">Returns label entry, or NULL if undefined (flags are used _only_ to determine namespace)  <a href="#a5f268916937d60f062425639f44297aa"></a><br/></dl><li><a class="el" href="struct__label__entry.html">LabelEntry</a> <a class="el" href="symtab_8c.html#ac0093e82d521c18e97808dece3977a8e">labellookup</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st, char *s, int flags, int create)
<dl class="el"><dd class="mdescRight">Look up a label, add flags, and return label entry (NULL if undefined).  <a href="#ac0093e82d521c18e97808dece3977a8e"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#a6bef4ae75a3c342bc70d649d0df0d2c3">droplabel</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st, <a class="el" href="struct__label__entry.html">LabelEntry</a> l)
<dl class="el"><dd class="mdescRight">Drops a label from the symbol table (NB: its reference index can't be re-used).  <a href="#a6bef4ae75a3c342bc70d649d0df0d2c3"></a><br/></dl><li>int <a class="el" href="symtab_8c.html#a8e90293705f1068b3cb9685cf83e594f">check_labels</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st)
<dl class="el"><dd class="mdescRight">Checks whether all used labels are defined (and vice versa).  <a href="#a8e90293705f1068b3cb9685cf83e594f"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#aefe6c8a249a4c4a5632c2c5981026931">print_symbol_table</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st)
<dl class="el"><dd class="mdescRight">print symbol table contents (for debugging purposes)  <a href="#aefe6c8a249a4c4a5632c2c5981026931"></a><br/></dl><li><a class="el" href="struct__label__entry.html">LabelEntry</a> <a class="el" href="symtab_8c.html#abc24cdf73c38ef9e57dc0c10550ecbd3">symbol_table_new_iterator</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st, int flags)
<li><a class="el" href="struct__label__entry.html">LabelEntry</a> <a class="el" href="symtab_8c.html#ac14125b1884227479df64bbbbe18d12b">symbol_table_iterator</a> (<a class="el" href="struct__label__entry.html">LabelEntry</a> prev, int flags)
<li><a class="el" href="struct___ref_tab.html">RefTab</a> <a class="el" href="symtab_8c.html#a6ae8b59e9ea13b28c1a979173668228c">new_reftab</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st)
<dl class="el"><dd class="mdescRight">Create new reference table of required size for the given symbol table.  <a href="#a6ae8b59e9ea13b28c1a979173668228c"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#a448face920c0c14c6a5fcf0263b4a6bd">delete_reftab</a> (<a class="el" href="struct___ref_tab.html">RefTab</a> rt)
<dl class="el"><dd class="mdescRight">Deletes (and frees) a reference table.  <a href="#a448face920c0c14c6a5fcf0263b4a6bd"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#ad710a07c833b7bbb5103038456f49dc0">dup_reftab</a> (<a class="el" href="struct___ref_tab.html">RefTab</a> rt1, <a class="el" href="struct___ref_tab.html">RefTab</a> rt2)
<dl class="el"><dd class="mdescRight">Copies rt1 to rt2; doesn't allocate new reftab for efficiency reasons.  <a href="#ad710a07c833b7bbb5103038456f49dc0"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#a1bb61bd3977a4f3db118c720ab61adca">reset_reftab</a> (<a class="el" href="struct___ref_tab.html">RefTab</a> rt)
<dl class="el"><dd class="mdescRight">resets all referenced corpus position to -1 -&gt; undefine all references  <a href="#a1bb61bd3977a4f3db118c720ab61adca"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#a90a9d5b7a04a2f7fba3864df76d49760">set_reftab</a> (<a class="el" href="struct___ref_tab.html">RefTab</a> rt, int index, int value)
<dl class="el"><dd class="mdescRight">set references (cpos value in get_reftab is returned for 'this' label (_), set to -1 if n/a)  <a href="#a90a9d5b7a04a2f7fba3864df76d49760"></a><br/></dl><li>int <a class="el" href="symtab_8c.html#a626f8764b931a695b6f1b93c029c5026">get_reftab</a> (<a class="el" href="struct___ref_tab.html">RefTab</a> rt, int index, int cpos)
<dl class="el"><dd class="mdescRight">read references (cpos value in get_reftab is returned for 'this' label (_), set to -1 if n/a)  <a href="#a626f8764b931a695b6f1b93c029c5026"></a><br/></dl><li>void <a class="el" href="symtab_8c.html#a58fb972b7977dfdbcb513bf607e5bbcd">print_label_values</a> (<a class="el" href="struct__symbol__table.html">SymbolTable</a> st, <a class="el" href="struct___ref_tab.html">RefTab</a> rt, int cpos)
<dl class="el"><dd class="mdescRight">Prints the current label values (for debugging).  <a href="#a58fb972b7977dfdbcb513bf607e5bbcd"></a><br/></dl></ul>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="a8e90293705f1068b3cb9685cf83e594f"></a><!-- doxytag: member="symtab.c::check_labels" ref="a8e90293705f1068b3cb9685cf83e594f" args="(SymbolTable st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int check_labels </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Checks whether all used labels are defined (and vice versa). </p>
<p>[only non-special labels in the user namespace will be checked] </p>

<p>References <a class="el" href="output_8c.html#ac523a4b34d2f925e027d8f433de703c9">cqpmessage()</a>, <a class="el" href="struct__label__entry.html#ac8bf36fe0577cba66bccda3a6f7e80a4">_label_entry::flags</a>, <a class="el" href="symtab_8h.html#a2d56f7ced81c60d6486eb1e9716500f7">LAB_DEFINED</a>, <a class="el" href="symtab_8h.html#a60a89751fe754c94dd58042f02dfc984">LAB_SPECIAL</a>, <a class="el" href="symtab_8h.html#ab2866faf1a8020f22d4d2fb7677459dd">LAB_USED</a>, <a class="el" href="struct__label__entry.html#a5ac083a645d964373f022d03df4849c8">_label_entry::name</a>, <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>, <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>, and <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a48f2bb70fceb692a2dedd8cea496c44b">Warning</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a1fb802bc0071a3b18f2992ea2388211d">do_SearchPattern()</a>.</p>

</div>
</div>
<a class="anchor" id="a448face920c0c14c6a5fcf0263b4a6bd"></a><!-- doxytag: member="symtab.c::delete_reftab" ref="a448face920c0c14c6a5fcf0263b4a6bd" args="(RefTab rt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void delete_reftab </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Deletes (and frees) a reference table. </p>

<p>References <a class="el" href="struct___ref_tab.html#ac103627c1ad15cbec2f22d0abe6d54b6">_RefTab::data</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#a6b88f677ea68fdf529f6588033930492">check_alignment_constraints()</a>, and <a class="el" href="eval_8c.html#a6d83579b3075256f14a62888a2e4b284">simulate_dfa()</a>.</p>

</div>
</div>
<a class="anchor" id="a88f028926f1ee3949b53176f8fb52503"></a><!-- doxytag: member="symtab.c::delete_symbol_table" ref="a88f028926f1ee3949b53176f8fb52503" args="(SymbolTable st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void delete_symbol_table </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>delete symbol table (free all entries) </p>

<p>References <a class="el" href="symtab_8c.html#a253b1729b8cea8310482910a7a995941">free_labellist()</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="eval_8h.html#af29e9f19b26beddcdba87657cc915704">free_environment()</a>.</p>

</div>
</div>
<a class="anchor" id="a6bef4ae75a3c342bc70d649d0df0d2c3"></a><!-- doxytag: member="symtab.c::droplabel" ref="a6bef4ae75a3c342bc70d649d0df0d2c3" args="(SymbolTable st, LabelEntry l)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void droplabel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct__label__entry.html">LabelEntry</a>&#160;</td>
          <td class="paramname"><em>l</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Drops a label from the symbol table (NB: its reference index can't be re-used). </p>
<p>WARNING: this function is not implemented (doesn't seem to be useful at the moment) </p>

</div>
</div>
<a class="anchor" id="ad710a07c833b7bbb5103038456f49dc0"></a><!-- doxytag: member="symtab.c::dup_reftab" ref="ad710a07c833b7bbb5103038456f49dc0" args="(RefTab rt1, RefTab rt2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void dup_reftab </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copies rt1 to rt2; doesn't allocate new reftab for efficiency reasons. </p>

<p>References <a class="el" href="struct___ref_tab.html#ac103627c1ad15cbec2f22d0abe6d54b6">_RefTab::data</a>, and <a class="el" href="struct___ref_tab.html#a439227feff9d7f55384e8780cfc2eb82">_RefTab::size</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#aaf8dd0672a1325480955ab8397b1928b">eval_constraint()</a>, and <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>.</p>

</div>
</div>
<a class="anchor" id="a5f268916937d60f062425639f44297aa"></a><!-- doxytag: member="symtab.c::findlabel" ref="a5f268916937d60f062425639f44297aa" args="(SymbolTable st, char *s, int flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__label__entry.html">LabelEntry</a> findlabel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Returns label entry, or NULL if undefined (flags are used _only_ to determine namespace) </p>

<p>References <a class="el" href="symtab_8h.html#a6312218a29837109d7bb90732a7a8c9b">LAB_RDAT</a>, <a class="el" href="struct__label__entry.html#a5ac083a645d964373f022d03df4849c8">_label_entry::name</a>, <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a4335ddbb14865c031041a194e182ed92">do_XMLTag()</a>, and <a class="el" href="symtab_8h.html#ac0093e82d521c18e97808dece3977a8e">labellookup()</a>.</p>

</div>
</div>
<a class="anchor" id="a253b1729b8cea8310482910a7a995941"></a><!-- doxytag: member="symtab.c::free_labellist" ref="a253b1729b8cea8310482910a7a995941" args="(LabelEntry l)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void free_labellist </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__label__entry.html">LabelEntry</a>&#160;</td>
          <td class="paramname"><em>l</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Frees the whole of a linked list of labels entries. </p>

<p>References <a class="el" href="struct__label__entry.html#a5ac083a645d964373f022d03df4849c8">_label_entry::name</a>, and <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>.</p>

<p>Referenced by <a class="el" href="symtab_8h.html#a88f028926f1ee3949b53176f8fb52503">delete_symbol_table()</a>.</p>

</div>
</div>
<a class="anchor" id="a626f8764b931a695b6f1b93c029c5026"></a><!-- doxytag: member="symtab.c::get_reftab" ref="a626f8764b931a695b6f1b93c029c5026" args="(RefTab rt, int index, int cpos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int get_reftab </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cpos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>read references (cpos value in get_reftab is returned for 'this' label (_), set to -1 if n/a) </p>

<p>References <a class="el" href="struct___ref_tab.html#ac103627c1ad15cbec2f22d0abe6d54b6">_RefTab::data</a>, and <a class="el" href="struct___ref_tab.html#a439227feff9d7f55384e8780cfc2eb82">_RefTab::size</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#aaf8dd0672a1325480955ab8397b1928b">eval_constraint()</a>, <a class="el" href="eval_8c.html#a56ebf47da8a1555648176db1b81a4526">get_label_referenced_position()</a>, <a class="el" href="symtab_8h.html#a58fb972b7977dfdbcb513bf607e5bbcd">print_label_values()</a>, and <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>.</p>

</div>
</div>
<a class="anchor" id="ac0093e82d521c18e97808dece3977a8e"></a><!-- doxytag: member="symtab.c::labellookup" ref="ac0093e82d521c18e97808dece3977a8e" args="(SymbolTable st, char *s, int flags, int create)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__label__entry.html">LabelEntry</a> labellookup </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>s</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>create</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Look up a label, add flags, and return label entry (NULL if undefined). </p>
<p>if create is set and label does not exist, it is added to the symbol table </p>

<p>References <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="cl_8h.html#a6647d75d1d69c7d25447da514b7e4682">cl_strdup()</a>, <a class="el" href="corpmanag_8c.html#a746b800ffb51e8f93719735b06e40a54">field_name_to_type()</a>, <a class="el" href="symtab_8c.html#a5f268916937d60f062425639f44297aa">findlabel()</a>, <a class="el" href="struct__label__entry.html#ac8bf36fe0577cba66bccda3a6f7e80a4">_label_entry::flags</a>, <a class="el" href="symtab_8h.html#a6312218a29837109d7bb90732a7a8c9b">LAB_RDAT</a>, <a class="el" href="symtab_8h.html#a60a89751fe754c94dd58042f02dfc984">LAB_SPECIAL</a>, <a class="el" href="struct__label__entry.html#a5ac083a645d964373f022d03df4849c8">_label_entry::name</a>, <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>, <a class="el" href="struct__symbol__table.html#a720939920b71c9d9f9410359151d8224">_symbol_table::next_index</a>, <a class="el" href="corpmanag_8h.html#ad831993de681337ae44f6bcccbc42d8cae1b5487a3a59e85cdef93ded06a9144e">NoField</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, <a class="el" href="struct__label__entry.html#adb528a1cb1ca190150183394d082590d">_label_entry::ref</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a53aef5872fed91559eba1f0082c41bf1">do_IDReference()</a>, <a class="el" href="parse__actions_8h.html#ad25148f9894719c8dda9055e13abfa91">do_LabelReference()</a>, <a class="el" href="parse__actions_8h.html#ad4b42dd005a14bd1014115d669f993ac">do_NamedWfPattern()</a>, and <a class="el" href="parse__actions_8h.html#a4335ddbb14865c031041a194e182ed92">do_XMLTag()</a>.</p>

</div>
</div>
<a class="anchor" id="a6ae8b59e9ea13b28c1a979173668228c"></a><!-- doxytag: member="symtab.c::new_reftab" ref="a6ae8b59e9ea13b28c1a979173668228c" args="(SymbolTable st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct___ref_tab.html">RefTab</a> new_reftab </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Create new reference table of required size for the given symbol table. </p>
<p>NB If further labels are added to st, you must reallocate the reference table to make room for the new reference indices </p>

<p>References <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="struct___ref_tab.html#ac103627c1ad15cbec2f22d0abe6d54b6">_RefTab::data</a>, <a class="el" href="struct__symbol__table.html#a720939920b71c9d9f9410359151d8224">_symbol_table::next_index</a>, and <a class="el" href="struct___ref_tab.html#a439227feff9d7f55384e8780cfc2eb82">_RefTab::size</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#a6b88f677ea68fdf529f6588033930492">check_alignment_constraints()</a>, and <a class="el" href="eval_8c.html#a6d83579b3075256f14a62888a2e4b284">simulate_dfa()</a>.</p>

</div>
</div>
<a class="anchor" id="aaaefbb8e4ef2ee9d47483bfe113f4a46"></a><!-- doxytag: member="symtab.c::new_symbol_table" ref="aaaefbb8e4ef2ee9d47483bfe113f4a46" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__symbol__table.html">SymbolTable</a> new_symbol_table </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>create new symbol table </p>

<p>References <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="struct__symbol__table.html#a720939920b71c9d9f9410359151d8224">_symbol_table::next_index</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="eval_8h.html#aa86d4404d808161292634a1c1e62871d">next_environment()</a>.</p>

</div>
</div>
<a class="anchor" id="a58fb972b7977dfdbcb513bf607e5bbcd"></a><!-- doxytag: member="symtab.c::print_label_values" ref="a58fb972b7977dfdbcb513bf607e5bbcd" args="(SymbolTable st, RefTab rt, int cpos)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print_label_values </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cpos</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Prints the current label values (for debugging). </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">st</td><td>The SymbolTable </td></tr>
    <tr><td class="paramname">rt</td><td></td></tr>
    <tr><td class="paramname">cpos</td><td>The corpus position </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="symtab_8c.html#a626f8764b931a695b6f1b93c029c5026">get_reftab()</a>, <a class="el" href="struct__label__entry.html#a5ac083a645d964373f022d03df4849c8">_label_entry::name</a>, <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>, <a class="el" href="struct__symbol__table.html#a720939920b71c9d9f9410359151d8224">_symbol_table::next_index</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, <a class="el" href="struct__label__entry.html#adb528a1cb1ca190150183394d082590d">_label_entry::ref</a>, <a class="el" href="struct___ref_tab.html#a439227feff9d7f55384e8780cfc2eb82">_RefTab::size</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>.</p>

</div>
</div>
<a class="anchor" id="aefe6c8a249a4c4a5632c2c5981026931"></a><!-- doxytag: member="symtab.c::print_symbol_table" ref="aefe6c8a249a4c4a5632c2c5981026931" args="(SymbolTable st)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print_symbol_table </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>print symbol table contents (for debugging purposes) </p>

<p>References <a class="el" href="struct__label__entry.html#ac8bf36fe0577cba66bccda3a6f7e80a4">_label_entry::flags</a>, <a class="el" href="struct__label__entry.html#a5ac083a645d964373f022d03df4849c8">_label_entry::name</a>, <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, <a class="el" href="struct__label__entry.html#adb528a1cb1ca190150183394d082590d">_label_entry::ref</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#a6d83579b3075256f14a62888a2e4b284">simulate_dfa()</a>.</p>

</div>
</div>
<a class="anchor" id="a1bb61bd3977a4f3db118c720ab61adca"></a><!-- doxytag: member="symtab.c::reset_reftab" ref="a1bb61bd3977a4f3db118c720ab61adca" args="(RefTab rt)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void reset_reftab </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>resets all referenced corpus position to -1 -&gt; undefine all references </p>

<p>References <a class="el" href="struct___ref_tab.html#ac103627c1ad15cbec2f22d0abe6d54b6">_RefTab::data</a>, and <a class="el" href="struct___ref_tab.html#a439227feff9d7f55384e8780cfc2eb82">_RefTab::size</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>, and <a class="el" href="eval_8c.html#a6d83579b3075256f14a62888a2e4b284">simulate_dfa()</a>.</p>

</div>
</div>
<a class="anchor" id="a90a9d5b7a04a2f7fba3864df76d49760"></a><!-- doxytag: member="symtab.c::set_reftab" ref="a90a9d5b7a04a2f7fba3864df76d49760" args="(RefTab rt, int index, int value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void set_reftab </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct___ref_tab.html">RefTab</a>&#160;</td>
          <td class="paramname"><em>rt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>set references (cpos value in get_reftab is returned for 'this' label (_), set to -1 if n/a) </p>

<p>References <a class="el" href="output_8c.html#ac523a4b34d2f925e027d8f433de703c9">cqpmessage()</a>, <a class="el" href="struct___ref_tab.html#ac103627c1ad15cbec2f22d0abe6d54b6">_RefTab::data</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a4dfd42ec49d09d8c6555c218301cc30f">Error</a>, and <a class="el" href="struct___ref_tab.html#a439227feff9d7f55384e8780cfc2eb82">_RefTab::size</a>.</p>

<p>Referenced by <a class="el" href="eval_8h.html#a1c6b9087d4b9c61e2be81a7a68e174cc">eval_bool()</a>, <a class="el" href="eval_8c.html#aaf8dd0672a1325480955ab8397b1928b">eval_constraint()</a>, <a class="el" href="eval_8c.html#aead01bf924ccdd541a9018bf1d72730e">get_leaf_value()</a>, and <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>.</p>

</div>
</div>
<a class="anchor" id="ac14125b1884227479df64bbbbe18d12b"></a><!-- doxytag: member="symtab.c::symbol_table_iterator" ref="ac14125b1884227479df64bbbbe18d12b" args="(LabelEntry prev, int flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__label__entry.html">LabelEntry</a> symbol_table_iterator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__label__entry.html">LabelEntry</a>&#160;</td>
          <td class="paramname"><em>prev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>References <a class="el" href="struct__label__entry.html#ac8bf36fe0577cba66bccda3a6f7e80a4">_label_entry::flags</a>, and <a class="el" href="struct__label__entry.html#a16e4ff82fdfe36114b736247599d8843">_label_entry::next</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>, and <a class="el" href="symtab_8h.html#abc24cdf73c38ef9e57dc0c10550ecbd3">symbol_table_new_iterator()</a>.</p>

</div>
</div>
<a class="anchor" id="abc24cdf73c38ef9e57dc0c10550ecbd3"></a><!-- doxytag: member="symtab.c::symbol_table_new_iterator" ref="abc24cdf73c38ef9e57dc0c10550ecbd3" args="(SymbolTable st, int flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct__label__entry.html">LabelEntry</a> symbol_table_new_iterator </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__symbol__table.html">SymbolTable</a>&#160;</td>
          <td class="paramname"><em>st</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>flags</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>References <a class="el" href="struct__label__entry.html#ac8bf36fe0577cba66bccda3a6f7e80a4">_label_entry::flags</a>, <a class="el" href="symtab_8h.html#a6312218a29837109d7bb90732a7a8c9b">LAB_RDAT</a>, <a class="el" href="struct__symbol__table.html#a5ae84d59f2d58c07e93dd8922feaa3d0">_symbol_table::rdat</a>, <a class="el" href="symtab_8c.html#ac14125b1884227479df64bbbbe18d12b">symbol_table_iterator()</a>, and <a class="el" href="struct__symbol__table.html#ad60ce16127d1cd3690f7c825c3ac02a2">_symbol_table::user</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>.</p>

</div>
</div>
</div>
<hr class="footer"/><address class="footer"><small>Generated on Tue Jan 17 2012 22:07:39 for CWB by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </small></address>
</body>
</html>
