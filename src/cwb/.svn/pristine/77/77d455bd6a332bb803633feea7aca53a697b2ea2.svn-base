<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.8"/>
<title>CWB: cl/bitfields.c File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CWB
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_0b9712b4d566c131b10613af70a8e558.html">cl</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">bitfields.c File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;limits.h&gt;</code><br />
<code>#include &quot;<a class="el" href="globals_8h.html">globals.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="macros_8h.html">macros.h</a>&quot;</code><br />
<code>#include &quot;<a class="el" href="bitfields_8h.html">bitfields.h</a>&quot;</code><br />
</div><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a22dc84a6d194440c86a2ddba08a08ba3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a22dc84a6d194440c86a2ddba08a08ba3">create_bitfield</a> (int nr_of_elements)</td></tr>
<tr class="memdesc:a22dc84a6d194440c86a2ddba08a08ba3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new Bitfield object.  <a href="#a22dc84a6d194440c86a2ddba08a08ba3">More...</a><br /></td></tr>
<tr class="separator:a22dc84a6d194440c86a2ddba08a08ba3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a681c6d96bd90ad1a9815aa3473524edd"><td class="memItemLeft" align="right" valign="top"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a681c6d96bd90ad1a9815aa3473524edd">copy_bitfield</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> source)</td></tr>
<tr class="memdesc:a681c6d96bd90ad1a9815aa3473524edd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies a Bitfield.  <a href="#a681c6d96bd90ad1a9815aa3473524edd">More...</a><br /></td></tr>
<tr class="separator:a681c6d96bd90ad1a9815aa3473524edd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a203675ec8c83546558603bf24be6d938"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a203675ec8c83546558603bf24be6d938">destroy_bitfield</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> *bptr)</td></tr>
<tr class="memdesc:a203675ec8c83546558603bf24be6d938"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes a bitfield object.  <a href="#a203675ec8c83546558603bf24be6d938">More...</a><br /></td></tr>
<tr class="separator:a203675ec8c83546558603bf24be6d938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24b556c73d8ad4d838638735965f8915"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a24b556c73d8ad4d838638735965f8915">set_bit</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield, int element)</td></tr>
<tr class="memdesc:a24b556c73d8ad4d838638735965f8915"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a bit in a Bitfield to 1.  <a href="#a24b556c73d8ad4d838638735965f8915">More...</a><br /></td></tr>
<tr class="separator:a24b556c73d8ad4d838638735965f8915"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3061818aa08b4bf624cf4778246b701"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#ad3061818aa08b4bf624cf4778246b701">clear_bit</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield, int element)</td></tr>
<tr class="memdesc:ad3061818aa08b4bf624cf4778246b701"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets a bit in a Bitfield to 0 (clears it).  <a href="#ad3061818aa08b4bf624cf4778246b701">More...</a><br /></td></tr>
<tr class="separator:ad3061818aa08b4bf624cf4778246b701"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5979492fae86ce526453a18700b9a3c"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#ae5979492fae86ce526453a18700b9a3c">clear_all_bits</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield)</td></tr>
<tr class="memdesc:ae5979492fae86ce526453a18700b9a3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears an entire Bitfield (ie sets all bits to 0).  <a href="#ae5979492fae86ce526453a18700b9a3c">More...</a><br /></td></tr>
<tr class="separator:ae5979492fae86ce526453a18700b9a3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15f5f583c9a272cc32a1114249d5aa5b"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a15f5f583c9a272cc32a1114249d5aa5b">set_all_bits</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield)</td></tr>
<tr class="memdesc:a15f5f583c9a272cc32a1114249d5aa5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an entire Bitfield (ie sets all bits to 1, all bytes to 0xff).  <a href="#a15f5f583c9a272cc32a1114249d5aa5b">More...</a><br /></td></tr>
<tr class="separator:a15f5f583c9a272cc32a1114249d5aa5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad210c275b3c58c3b52a48803326ddc54"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#ad210c275b3c58c3b52a48803326ddc54">get_bit</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield, int element)</td></tr>
<tr class="memdesc:ad210c275b3c58c3b52a48803326ddc54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the value of the bit at the specified offset in the Bitfield.  <a href="#ad210c275b3c58c3b52a48803326ddc54">More...</a><br /></td></tr>
<tr class="separator:ad210c275b3c58c3b52a48803326ddc54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a552f58f2765709031479a1a51b918fe3"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a552f58f2765709031479a1a51b918fe3">toggle_bit</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield, int element)</td></tr>
<tr class="memdesc:a552f58f2765709031479a1a51b918fe3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches the value of the specified bit in a Bitfield.  <a href="#a552f58f2765709031479a1a51b918fe3">More...</a><br /></td></tr>
<tr class="separator:a552f58f2765709031479a1a51b918fe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ef99585813d224acd33676d08870f95"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a6ef99585813d224acd33676d08870f95">bf_equal</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bf1, <a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bf2)</td></tr>
<tr class="memdesc:a6ef99585813d224acd33676d08870f95"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks two Bitfield objects for equality of all bits.  <a href="#a6ef99585813d224acd33676d08870f95">More...</a><br /></td></tr>
<tr class="separator:a6ef99585813d224acd33676d08870f95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83e4e6a455897377f9cc3f119777d7d2"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a83e4e6a455897377f9cc3f119777d7d2">bf_compare</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bf1, <a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bf2)</td></tr>
<tr class="memdesc:a83e4e6a455897377f9cc3f119777d7d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares two Bitfield objects.  <a href="#a83e4e6a455897377f9cc3f119777d7d2">More...</a><br /></td></tr>
<tr class="separator:a83e4e6a455897377f9cc3f119777d7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a574f8eaf5b71f90da69c3582135a26"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a0a574f8eaf5b71f90da69c3582135a26">nr_bits_set</a> (<a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> bitfield)</td></tr>
<tr class="memdesc:a0a574f8eaf5b71f90da69c3582135a26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the number of bits set to 1 in the given Bitfield.  <a href="#a0a574f8eaf5b71f90da69c3582135a26">More...</a><br /></td></tr>
<tr class="separator:a0a574f8eaf5b71f90da69c3582135a26"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a925c55b19adb39808581b7cbbc376c0a"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#a925c55b19adb39808581b7cbbc376c0a">BaseTypeSize</a> = sizeof(<a class="el" href="bitfields_8h.html#a4dd4ca04618ab319a08ff7cb48d02653">BFBaseType</a>)</td></tr>
<tr class="memdesc:a925c55b19adb39808581b7cbbc376c0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of the actual field of a Bitfield (in bytes).  <a href="#a925c55b19adb39808581b7cbbc376c0a">More...</a><br /></td></tr>
<tr class="separator:a925c55b19adb39808581b7cbbc376c0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe9f2098291462ba91508ce136a7f126"><td class="memItemLeft" align="right" valign="top">static int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a> = sizeof(<a class="el" href="bitfields_8h.html#a4dd4ca04618ab319a08ff7cb48d02653">BFBaseType</a>) * CHAR_BIT</td></tr>
<tr class="memdesc:afe9f2098291462ba91508ce136a7f126"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of the actual field of a Bitfield (in bits).  <a href="#afe9f2098291462ba91508ce136a7f126">More...</a><br /></td></tr>
<tr class="separator:afe9f2098291462ba91508ce136a7f126"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a83e4e6a455897377f9cc3f119777d7d2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bf_compare </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bf1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bf2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Compares two Bitfield objects. </p>
<p>Comparison is done from the start of the bitfield onwards. The Bitfields compared must have the same number of elements!</p>
<dl class="section return"><dt>Returns</dt><dd>0 if the two are the same; 1 if bf1 is less; -1 if bf2 is less. </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, <a class="el" href="bitfields_8c.html#a925c55b19adb39808581b7cbbc376c0a">BaseTypeSize</a>, <a class="el" href="struct_b_f_buf.html#a3e18e5ab1201e205ce88c473a2f4bf99">BFBuf::bytes</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, and <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>.</p>

</div>
</div>
<a class="anchor" id="a6ef99585813d224acd33676d08870f95"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int bf_equal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bf1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bf2</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks two Bitfield objects for equality of all bits. </p>
<p>The Bitfields compared must have the same number of elements!</p>
<dl class="section return"><dt>Returns</dt><dd>Boolean: false if the two bitfields are different, true if they are the same. </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, <a class="el" href="bitfields_8c.html#a925c55b19adb39808581b7cbbc376c0a">BaseTypeSize</a>, <a class="el" href="struct_b_f_buf.html#a3e18e5ab1201e205ce88c473a2f4bf99">BFBuf::bytes</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, and <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>.</p>

</div>
</div>
<a class="anchor" id="ae5979492fae86ce526453a18700b9a3c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int clear_all_bits </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears an entire Bitfield (ie sets all bits to 0). </p>
<dl class="section return"><dt>Returns</dt><dd>False if passed a NULL pointer; otherwise true. </dd></dl>

<p>References <a class="el" href="struct_b_f_buf.html#a3e18e5ab1201e205ce88c473a2f4bf99">BFBuf::bytes</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#abcf01813cbf1161269761c3d6a2dc239">matchfirstpattern()</a>.</p>

</div>
</div>
<a class="anchor" id="ad3061818aa08b4bf624cf4778246b701"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int clear_bit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>element</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a bit in a Bitfield to 0 (clears it). </p>
<p>The number of bits set is decreased by 1 iff the clearing of the specified bit has resulted in a change in the bitfield.</p>
<p>If the offset specified does not exist within this Bitfield, the function returns false (plus an error message is printed). Otherwise it returns true.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bitfield</td><td>The Bitfield object to work with. </td></tr>
    <tr><td class="paramname">element</td><td>The offset of the bit to set. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Boolean (see description). </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

</div>
</div>
<a class="anchor" id="a681c6d96bd90ad1a9815aa3473524edd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> copy_bitfield </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>source</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copies a Bitfield. </p>
<p>Creates a new bitfield object whihc is an exact duplicate of the source Bitfield.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">source</td><td>The Bitfield to copy </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The duplicate Bitfield (or NULL if it was passed NULL). </dd></dl>

<p>References <a class="el" href="struct_b_f_buf.html#a3e18e5ab1201e205ce88c473a2f4bf99">BFBuf::bytes</a>, <a class="el" href="bitfields_8c.html#a22dc84a6d194440c86a2ddba08a08ba3">create_bitfield()</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

</div>
</div>
<a class="anchor" id="a22dc84a6d194440c86a2ddba08a08ba3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> create_bitfield </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nr_of_elements</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Create a new Bitfield object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">nr_of_elements</td><td>The number of bits the field should contain. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The new Bitfield object. </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, <a class="el" href="bitfields_8c.html#a925c55b19adb39808581b7cbbc376c0a">BaseTypeSize</a>, <a class="el" href="struct_b_f_buf.html#a3e18e5ab1201e205ce88c473a2f4bf99">BFBuf::bytes</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

<p>Referenced by <a class="el" href="bitfields_8h.html#a681c6d96bd90ad1a9815aa3473524edd">copy_bitfield()</a>, <a class="el" href="parse__actions_8h.html#ac4a1a3059f49c902206ded175e91c2d8">do_delete_lines()</a>, <a class="el" href="parse__actions_8h.html#a4496bd424ac57e01410f15563f12fe13">do_delete_lines_num()</a>, <a class="el" href="parse__actions_8h.html#a2d2735c622403fc1509ad9273e2cf368">do_reduce()</a>, <a class="el" href="parse__actions_8h.html#a2aaabbb6bcc4e5210745065baaaf715c">do_StandardQuery()</a>, and <a class="el" href="eval_8c.html#abcf01813cbf1161269761c3d6a2dc239">matchfirstpattern()</a>.</p>

</div>
</div>
<a class="anchor" id="a203675ec8c83546558603bf24be6d938"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int destroy_bitfield </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a> *&#160;</td>
          <td class="paramname"><em>bptr</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes a bitfield object. </p>
<dl class="section return"><dt>Returns</dt><dd>Always 1. </dd></dl>

<p>Referenced by <a class="el" href="parse__actions_8h.html#ac4a1a3059f49c902206ded175e91c2d8">do_delete_lines()</a>, <a class="el" href="parse__actions_8h.html#a4496bd424ac57e01410f15563f12fe13">do_delete_lines_num()</a>, <a class="el" href="parse__actions_8h.html#a2d2735c622403fc1509ad9273e2cf368">do_reduce()</a>, <a class="el" href="parse__actions_8h.html#a2aaabbb6bcc4e5210745065baaaf715c">do_StandardQuery()</a>, and <a class="el" href="eval_8c.html#abcf01813cbf1161269761c3d6a2dc239">matchfirstpattern()</a>.</p>

</div>
</div>
<a class="anchor" id="ad210c275b3c58c3b52a48803326ddc54"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int get_bit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>element</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the value of the bit at the specified offset in the Bitfield. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bitfield</td><td>The Bitfield to work with. </td></tr>
    <tr><td class="paramname">element</td><td>Offset of the desired bit. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>1 if the bit is set; 0 if it isn't; -1 if element is not a legal offset (ie if it's outside the bounds of the bitfield). </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, and <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>.</p>

<p>Referenced by <a class="el" href="ranges_8h.html#a380a0ffa5288d08f4304bf0256230f90">delete_intervals()</a>, <a class="el" href="eval_8c.html#abcf01813cbf1161269761c3d6a2dc239">matchfirstpattern()</a>, and <a class="el" href="ranges_8h.html#a07b912b75ffdca85b0e961a6fdb313c4">RangeSetop()</a>.</p>

</div>
</div>
<a class="anchor" id="a0a574f8eaf5b71f90da69c3582135a26"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int nr_bits_set </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the number of bits set to 1 in the given Bitfield. </p>

<p>References <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a4496bd424ac57e01410f15563f12fe13">do_delete_lines_num()</a>.</p>

</div>
</div>
<a class="anchor" id="a15f5f583c9a272cc32a1114249d5aa5b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int set_all_bits </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets an entire Bitfield (ie sets all bits to 1, all bytes to 0xff). </p>
<dl class="section return"><dt>Returns</dt><dd>False if passed a NULL pointer; otherwise true. </dd></dl>

<p>References <a class="el" href="struct_b_f_buf.html#a3e18e5ab1201e205ce88c473a2f4bf99">BFBuf::bytes</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

<p>Referenced by <a class="el" href="eval_8c.html#abcf01813cbf1161269761c3d6a2dc239">matchfirstpattern()</a>.</p>

</div>
</div>
<a class="anchor" id="a24b556c73d8ad4d838638735965f8915"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int set_bit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>element</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a bit in a Bitfield to 1. </p>
<p>The number of bits set is increased by 1 iff the setting of the specified bit has resulted in a change in the bitfield.</p>
<p>If the offset specified does not exist within this Bitfield, the function returns false (plus an error message is printed). Otherwise it returns true.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bitfield</td><td>The Bitfield object to work with. </td></tr>
    <tr><td class="paramname">element</td><td>The offset of the bit to set. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Boolean (see description). </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#ac4a1a3059f49c902206ded175e91c2d8">do_delete_lines()</a>, <a class="el" href="parse__actions_8h.html#a4496bd424ac57e01410f15563f12fe13">do_delete_lines_num()</a>, <a class="el" href="parse__actions_8h.html#a2d2735c622403fc1509ad9273e2cf368">do_reduce()</a>, <a class="el" href="parse__actions_8h.html#a2aaabbb6bcc4e5210745065baaaf715c">do_StandardQuery()</a>, and <a class="el" href="eval_8c.html#abcf01813cbf1161269761c3d6a2dc239">matchfirstpattern()</a>.</p>

</div>
</div>
<a class="anchor" id="a552f58f2765709031479a1a51b918fe3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int toggle_bit </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="bitfields_8h.html#aeec9be1eda40a0de41a055d4a2c78608">Bitfield</a>&#160;</td>
          <td class="paramname"><em>bitfield</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>element</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Switches the value of the specified bit in a Bitfield. </p>
<p>The number of set bits is either incremented or decremented, as appropriate.</p>
<p>If the offset specified does not exist within this Bitfield, the function returns false (plus an error message is printed). Otherwise it returns true.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">bitfield</td><td>The Bitfield to work with. </td></tr>
    <tr><td class="paramname">element</td><td>Offset of the bit to flip. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Boolean (see description). </dd></dl>

<p>References <a class="el" href="bitfields_8c.html#afe9f2098291462ba91508ce136a7f126">BaseTypeBits</a>, <a class="el" href="struct_b_f_buf.html#abe406d7ef31ddd9f46750c60e82264da">BFBuf::field</a>, and <a class="el" href="struct_b_f_buf.html#aba6696ae0a592f8980adf0e7f40ce8f9">BFBuf::nr_bits_set</a>.</p>

<p>Referenced by <a class="el" href="ranges_8h.html#a6b8b6ac5716e8b2146d4f612457040f6">copy_intervals()</a>.</p>

</div>
</div>
<h2 class="groupheader">Variable Documentation</h2>
<a class="anchor" id="afe9f2098291462ba91508ce136a7f126"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int BaseTypeBits = sizeof(<a class="el" href="bitfields_8h.html#a4dd4ca04618ab319a08ff7cb48d02653">BFBaseType</a>) * CHAR_BIT</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size of the actual field of a Bitfield (in bits). </p>

<p>Referenced by <a class="el" href="bitfields_8h.html#a83e4e6a455897377f9cc3f119777d7d2">bf_compare()</a>, <a class="el" href="bitfields_8h.html#a6ef99585813d224acd33676d08870f95">bf_equal()</a>, <a class="el" href="bitfields_8h.html#ad3061818aa08b4bf624cf4778246b701">clear_bit()</a>, <a class="el" href="bitfields_8h.html#a22dc84a6d194440c86a2ddba08a08ba3">create_bitfield()</a>, <a class="el" href="bitfields_8h.html#ad210c275b3c58c3b52a48803326ddc54">get_bit()</a>, <a class="el" href="bitfields_8h.html#a24b556c73d8ad4d838638735965f8915">set_bit()</a>, and <a class="el" href="bitfields_8h.html#a552f58f2765709031479a1a51b918fe3">toggle_bit()</a>.</p>

</div>
</div>
<a class="anchor" id="a925c55b19adb39808581b7cbbc376c0a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">int BaseTypeSize = sizeof(<a class="el" href="bitfields_8h.html#a4dd4ca04618ab319a08ff7cb48d02653">BFBaseType</a>)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Size of the actual field of a Bitfield (in bytes). </p>

<p>Referenced by <a class="el" href="bitfields_8h.html#a83e4e6a455897377f9cc3f119777d7d2">bf_compare()</a>, <a class="el" href="bitfields_8h.html#a6ef99585813d224acd33676d08870f95">bf_equal()</a>, and <a class="el" href="bitfields_8h.html#a22dc84a6d194440c86a2ddba08a08ba3">create_bitfield()</a>.</p>

</div>
</div>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated on Mon Apr 17 2017 20:15:18 for CWB by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.8
</small></address>
</body>
</html>
