<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>CWB: cqp/ranges.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<!-- Generated by Doxygen 1.7.3 -->
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">CWB</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="dirs.html"><span>Directories</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
      <li><a href="globals.html"><span>Globals</span></a></li>
    </ul>
  </div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="dir_13ae6852ddc98ae3021a851cfae7ef8b.html">cqp</a>      </li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Defines</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<h1>ranges.h File Reference</h1>  </div>
</div>
<div class="contents">
<div class="textblock"><code>#include &quot;<a class="el" href="eval_8h.html">eval.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="corpmanag_8h.html">corpmanag.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="output_8h.html">output.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="bitfields_8h.html">../cl/bitfields.h</a>&quot;</code><br/>
<code>#include &quot;<a class="el" href="attributes_8h.html">../cl/attributes.h</a>&quot;</code><br/>
</div><h2><a name="nested-classes"></a>
Data Structures</h2>
<ul>
<li>struct <a class="el" href="struct__sort__clause.html">_sort_clause</a>
<dl class="el"><dd class="mdescRight">The SortClause object (and underlying SortClauseBuffer).  <a href="struct__sort__clause.html#_details">More...</a><br/></dl></ul>
<h2><a name="define-members"></a>
Defines</h2>
<ul>
<li>#define <a class="el" href="ranges_8h.html#a3137af28e4521cfee9298431371aeacc">SORT_FROM_START</a>&#160;&#160;&#160;0
<li>#define <a class="el" href="ranges_8h.html#a81b60ffb7f08a4fecc8d43834df31e21">SORT_FROM_END</a>&#160;&#160;&#160;1
<li>#define <a class="el" href="ranges_8h.html#abadea06f5604cc3fdc04494a56465e02">SORT_RESET</a>&#160;&#160;&#160;2
<li>#define <a class="el" href="ranges_8h.html#a94683b676fd7860a033006704be14f27">ALL_LINES</a>&#160;&#160;&#160;1
<dl class="el"><dd class="mdescRight">delete all lines  <a href="#a94683b676fd7860a033006704be14f27"></a><br/></dl><li>#define <a class="el" href="ranges_8h.html#af471b44e8ee52787c3267827cb4f5543">SELECTED_LINES</a>&#160;&#160;&#160;2
<dl class="el"><dd class="mdescRight">delete the selected lines  <a href="#af471b44e8ee52787c3267827cb4f5543"></a><br/></dl><li>#define <a class="el" href="ranges_8h.html#a45d4eee525446d5a26f6a62936b3ad0f">UNSELECTED_LINES</a>&#160;&#160;&#160;3
<dl class="el"><dd class="mdescRight">delete all but the selected lines  <a href="#a45d4eee525446d5a26f6a62936b3ad0f"></a><br/></dl></ul>
<h2><a name="typedef-members"></a>
Typedefs</h2>
<ul>
<li>typedef struct <a class="el" href="struct__sort__clause.html">_sort_clause</a> <a class="el" href="ranges_8h.html#acc1aee042a7a1f778f7c015a20fbd1ef">SortClauseBuffer</a>
<dl class="el"><dd class="mdescRight">The SortClause object (and underlying SortClauseBuffer).  <a href="#acc1aee042a7a1f778f7c015a20fbd1ef"></a><br/></dl><li>typedef struct <a class="el" href="struct__sort__clause.html">_sort_clause</a> * <a class="el" href="ranges_8h.html#a1aae3421b8c99f463efe492fc5dfaeea">SortClause</a>
<li>typedef enum <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4d">rng_setops</a> <a class="el" href="ranges_8h.html#a5f1f7659a2f69bd2d2c47a18c1d75761">RangeSetOp</a>
<dl class="el"><dd class="mdescRight">RangeSetOp object: indicates a specific type of operation that can be applied when operating on sets of corpus positions making up a subcorpus.  <a href="#a5f1f7659a2f69bd2d2c47a18c1d75761"></a><br/></dl></ul>
<h2><a name="enum-members"></a>
Enumerations</h2>
<ul>
<li>enum <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4d">rng_setops</a> { <br/>
&#160;&#160;<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da996940fb154ea3bdae92aaf280b5fc3c">RUnion</a>, 
<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da5b7703a91916d617d550275d7bb787ca">RIntersection</a>, 
<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da66f051cd3a1483fff0371412e0f71a58">RDiff</a>, 
<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da7a0e334e9c8588b08340a038481e2bba">RMaximalMatches</a>, 
<br/>
&#160;&#160;<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da80eabac7488b2c8e6bf08b1253872464">RMinimalMatches</a>, 
<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da24cbbe5117e525baafa58bd96d118e3f">RLeftMaximalMatches</a>, 
<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da9fa0212efaa725509202eb71dcfdca42">RNonOverlapping</a>, 
<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4dadfdac0d25fa66d2d846ebe518e52f829">RUniq</a>, 
<br/>
&#160;&#160;<a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da97fb52774348c9d10bc53cefeded5626">RReduce</a>
<br/>
 }
<dl class="el"><dd class="mdescRight"><p>RangeSetOp object: indicates a specific type of operation that can be applied when operating on sets of corpus positions making up a subcorpus. </p>
 <a href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4d">More...</a><br/></dl></ul>
<h2><a name="func-members"></a>
Functions</h2>
<ul>
<li>int <a class="el" href="ranges_8h.html#a018ec0219a3460b29980c4c6e217b16b">delete_interval</a> (<a class="el" href="structcl.html">CorpusList</a> *cp, int interval_number)
<dl class="el"><dd class="mdescRight">Delete a single concordance hit from a query-generated subcorpus.  <a href="#a018ec0219a3460b29980c4c6e217b16b"></a><br/></dl><li>int <a class="el" href="ranges_8h.html#a380a0ffa5288d08f4304bf0256230f90">delete_intervals</a> (<a class="el" href="structcl.html">CorpusList</a> *cp, <a class="el" href="struct_b_f_buf.html">Bitfield</a> which_intervals, int <a class="el" href="cwb-decode_8c.html#a0e683ae66015f10f972d6938197dbc5e">mode</a>)
<dl class="el"><dd class="mdescRight">Delete a whole bunch of concordance hits from a query-generated subcorpus.  <a href="#a380a0ffa5288d08f4304bf0256230f90"></a><br/></dl><li>int <a class="el" href="ranges_8h.html#a6b8b6ac5716e8b2146d4f612457040f6">copy_intervals</a> (<a class="el" href="structcl.html">CorpusList</a> *cp, <a class="el" href="struct_b_f_buf.html">Bitfield</a> which_intervals, int <a class="el" href="cwb-decode_8c.html#a0e683ae66015f10f972d6938197dbc5e">mode</a>, char *subcorpname)
<dl class="el"><dd class="mdescRight">Copy concordance hits from a query-generated subcorpus to a (new or existing) subcorpus.  <a href="#a6b8b6ac5716e8b2146d4f612457040f6"></a><br/></dl><li>int <a class="el" href="ranges_8h.html#a84d66c9e816d5a41ad2a419915e422a2">calculate_ranges</a> (<a class="el" href="structcl.html">CorpusList</a> *<a class="el" href="structcl.html">cl</a>, int cpos, <a class="el" href="structctxtsp.html">Context</a> spc, int *left, int *right)
<li>int <a class="el" href="ranges_8h.html#a13064067ab67533419fed20fd5fc16a2">calculate_rightboundary</a> (<a class="el" href="structcl.html">CorpusList</a> *<a class="el" href="structcl.html">cl</a>, int cpos, <a class="el" href="structctxtsp.html">Context</a> spc)
<li>int <a class="el" href="ranges_8h.html#abb11955bf49a45c2256be41073660405">calculate_leftboundary</a> (<a class="el" href="structcl.html">CorpusList</a> *<a class="el" href="structcl.html">cl</a>, int cpos, <a class="el" href="structctxtsp.html">Context</a> spc)
<li>int <a class="el" href="ranges_8h.html#a07b912b75ffdca85b0e961a6fdb313c4">RangeSetop</a> (<a class="el" href="structcl.html">CorpusList</a> *list1, <a class="el" href="ranges_8h.html#a5f1f7659a2f69bd2d2c47a18c1d75761">RangeSetOp</a> operation, <a class="el" href="structcl.html">CorpusList</a> *list2, <a class="el" href="struct_b_f_buf.html">Bitfield</a> restrictor)
<dl class="el"><dd class="mdescRight">Carries out one of a set of operations on corpus1.  <a href="#a07b912b75ffdca85b0e961a6fdb313c4"></a><br/></dl><li>void <a class="el" href="ranges_8h.html#a1ab410ce8460f2f5f41a4aac0e43faf0">RangeSort</a> (<a class="el" href="structcl.html">CorpusList</a> *c, int mk_sortidx)
<dl class="el"><dd class="mdescRight">Make sure that ranges are sorted in 'natural' order (i.e.  <a href="#a1ab410ce8460f2f5f41a4aac0e43faf0"></a><br/></dl><li>int <a class="el" href="ranges_8h.html#aaf5f006cef0ac7c1fdb5c9d55558c11a">SortSubcorpus</a> (<a class="el" href="structcl.html">CorpusList</a> *<a class="el" href="structcl.html">cl</a>, <a class="el" href="struct__sort__clause.html">SortClause</a> sc, int count_mode, struct <a class="el" href="struct_redir.html">Redir</a> *redir)
<dl class="el"><dd class="mdescRight">Sort the (query) subcorpus specified by cl, or count frequencies of matching strings.  <a href="#aaf5f006cef0ac7c1fdb5c9d55558c11a"></a><br/></dl><li>int <a class="el" href="ranges_8h.html#a816771441eaa5f9006f4187f9d0b99b4">SortSubcorpusRandomize</a> (<a class="el" href="structcl.html">CorpusList</a> *<a class="el" href="structcl.html">cl</a>, int seed)
<dl class="el"><dd class="mdescRight">Sorts a query result in random order.  <a href="#a816771441eaa5f9006f4187f9d0b99b4"></a><br/></dl><li>void <a class="el" href="ranges_8h.html#af07571c4f777e6bb22bdb6b47e71b594">FreeSortClause</a> (<a class="el" href="struct__sort__clause.html">SortClause</a> sc)
<dl class="el"><dd class="mdescRight">Frees a SortClause object.  <a href="#af07571c4f777e6bb22bdb6b47e71b594"></a><br/></dl></ul>
<hr/><h2>Define Documentation</h2>
<a class="anchor" id="a94683b676fd7860a033006704be14f27"></a><!-- doxytag: member="ranges.h::ALL_LINES" ref="a94683b676fd7860a033006704be14f27" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ALL_LINES&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>delete all lines </p>

<p>Referenced by <a class="el" href="ranges_8h.html#a380a0ffa5288d08f4304bf0256230f90">delete_intervals()</a>.</p>

</div>
</div>
<a class="anchor" id="af471b44e8ee52787c3267827cb4f5543"></a><!-- doxytag: member="ranges.h::SELECTED_LINES" ref="af471b44e8ee52787c3267827cb4f5543" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SELECTED_LINES&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>delete the selected lines </p>

<p>Referenced by <a class="el" href="ranges_8h.html#a6b8b6ac5716e8b2146d4f612457040f6">copy_intervals()</a>, <a class="el" href="ranges_8h.html#a380a0ffa5288d08f4304bf0256230f90">delete_intervals()</a>, and <a class="el" href="parse__actions_8h.html#a4496bd424ac57e01410f15563f12fe13">do_delete_lines_num()</a>.</p>

</div>
</div>
<a class="anchor" id="a81b60ffb7f08a4fecc8d43834df31e21"></a><!-- doxytag: member="ranges.h::SORT_FROM_END" ref="a81b60ffb7f08a4fecc8d43834df31e21" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SORT_FROM_END&#160;&#160;&#160;1</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a3137af28e4521cfee9298431371aeacc"></a><!-- doxytag: member="ranges.h::SORT_FROM_START" ref="a3137af28e4521cfee9298431371aeacc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SORT_FROM_START&#160;&#160;&#160;0</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="abadea06f5604cc3fdc04494a56465e02"></a><!-- doxytag: member="ranges.h::SORT_RESET" ref="abadea06f5604cc3fdc04494a56465e02" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define SORT_RESET&#160;&#160;&#160;2</td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="a45d4eee525446d5a26f6a62936b3ad0f"></a><!-- doxytag: member="ranges.h::UNSELECTED_LINES" ref="a45d4eee525446d5a26f6a62936b3ad0f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define UNSELECTED_LINES&#160;&#160;&#160;3</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>delete all but the selected lines </p>

<p>Referenced by <a class="el" href="ranges_8h.html#a6b8b6ac5716e8b2146d4f612457040f6">copy_intervals()</a>, <a class="el" href="ranges_8h.html#a380a0ffa5288d08f4304bf0256230f90">delete_intervals()</a>, <a class="el" href="parse__actions_8h.html#a2d2735c622403fc1509ad9273e2cf368">do_reduce()</a>, and <a class="el" href="parse__actions_8h.html#a2aaabbb6bcc4e5210745065baaaf715c">do_StandardQuery()</a>.</p>

</div>
</div>
<hr/><h2>Typedef Documentation</h2>
<a class="anchor" id="a5f1f7659a2f69bd2d2c47a18c1d75761"></a><!-- doxytag: member="ranges.h::RangeSetOp" ref="a5f1f7659a2f69bd2d2c47a18c1d75761" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef enum <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4d">rng_setops</a>  <a class="el" href="ranges_8h.html#a5f1f7659a2f69bd2d2c47a18c1d75761">RangeSetOp</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>RangeSetOp object: indicates a specific type of operation that can be applied when operating on sets of corpus positions making up a subcorpus. </p>
<p>RUnion, RDiff, and RIntersection operate on two corpora; the others operate on only one. </p>

</div>
</div>
<a class="anchor" id="a1aae3421b8c99f463efe492fc5dfaeea"></a><!-- doxytag: member="ranges.h::SortClause" ref="a1aae3421b8c99f463efe492fc5dfaeea" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct__sort__clause.html">_sort_clause</a> * <a class="el" href="struct__sort__clause.html">SortClause</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="acc1aee042a7a1f778f7c015a20fbd1ef"></a><!-- doxytag: member="ranges.h::SortClauseBuffer" ref="acc1aee042a7a1f778f7c015a20fbd1ef" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct <a class="el" href="struct__sort__clause.html">_sort_clause</a>  <a class="el" href="struct__sort__clause.html">SortClauseBuffer</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>The SortClause object (and underlying SortClauseBuffer). </p>
<p>Contains information about a sort to be applied to a query. </p>

</div>
</div>
<hr/><h2>Enumeration Type Documentation</h2>
<a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4d"></a><!-- doxytag: member="ranges.h::rng_setops" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4d" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4d">rng_setops</a></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>RangeSetOp object: indicates a specific type of operation that can be applied when operating on sets of corpus positions making up a subcorpus. </p>
<p>RUnion, RDiff, and RIntersection operate on two corpora; the others operate on only one. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da996940fb154ea3bdae92aaf280b5fc3c"></a><!-- doxytag: member="RUnion" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da996940fb154ea3bdae92aaf280b5fc3c" args="" -->RUnion</em>&nbsp;</td><td>
<p>unify two subcorpora (add to first the nonoverlapping intervals from second) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da5b7703a91916d617d550275d7bb787ca"></a><!-- doxytag: member="RIntersection" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da5b7703a91916d617d550275d7bb787ca" args="" -->RIntersection</em>&nbsp;</td><td>
<p>take the intersection of two subcorpora (remove from first any intervals that don't also occur in the second) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da66f051cd3a1483fff0371412e0f71a58"></a><!-- doxytag: member="RDiff" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da66f051cd3a1483fff0371412e0f71a58" args="" -->RDiff</em>&nbsp;</td><td>
<p>take the diff of two subcorpora (remove from first any intervals that also occur in the second) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da7a0e334e9c8588b08340a038481e2bba"></a><!-- doxytag: member="RMaximalMatches" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da7a0e334e9c8588b08340a038481e2bba" args="" -->RMaximalMatches</em>&nbsp;</td><td>
<p>new :o) (used by longest_match strategy) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da80eabac7488b2c8e6bf08b1253872464"></a><!-- doxytag: member="RMinimalMatches" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da80eabac7488b2c8e6bf08b1253872464" args="" -->RMinimalMatches</em>&nbsp;</td><td>
<p>used by shortest_match strategy </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da24cbbe5117e525baafa58bd96d118e3f"></a><!-- doxytag: member="RLeftMaximalMatches" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da24cbbe5117e525baafa58bd96d118e3f" args="" -->RLeftMaximalMatches</em>&nbsp;</td><td>
<p>used by standard_match strategy </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da9fa0212efaa725509202eb71dcfdca42"></a><!-- doxytag: member="RNonOverlapping" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da9fa0212efaa725509202eb71dcfdca42" args="" -->RNonOverlapping</em>&nbsp;</td><td>
<p>delete overlapping matches (for subqueries) </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4dadfdac0d25fa66d2d846ebe518e52f829"></a><!-- doxytag: member="RUniq" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4dadfdac0d25fa66d2d846ebe518e52f829" args="" -->RUniq</em>&nbsp;</td><td>
<p>make unique lists (= ordered sets) of ranges </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="aeb5ec9cdebf03b5a87f9c2e19012cf4da97fb52774348c9d10bc53cefeded5626"></a><!-- doxytag: member="RReduce" ref="aeb5ec9cdebf03b5a87f9c2e19012cf4da97fb52774348c9d10bc53cefeded5626" args="" -->RReduce</em>&nbsp;</td><td>
<p>remove intervals marked for deletion and reallocate now-spare memory. </p>
</td></tr>
</table>
</dd>
</dl>

</div>
</div>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="abb11955bf49a45c2256be41073660405"></a><!-- doxytag: member="ranges.h::calculate_leftboundary" ref="abb11955bf49a45c2256be41073660405" args="(CorpusList *cl, int cpos, Context spc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int calculate_leftboundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cpos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structctxtsp.html">Context</a>&#160;</td>
          <td class="paramname"><em>spc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>References <a class="el" href="ranges_8c.html#a84d66c9e816d5a41ad2a419915e422a2">calculate_ranges()</a>, <a class="el" href="eval_8h.html#a057366ca550f608ccc7310ec896f0719ab0ac36b187aa60c167ffcead3d5a03c0">left</a>, and <a class="el" href="eval_8h.html#a057366ca550f608ccc7310ec896f0719af763d610923b0c4614e8ecd65212666a">right</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a332a182ad6240cb7c95c4cc8d8096a7d">expand_dataspace()</a>, and <a class="el" href="corpmanag_8c.html#ac2bc10afb97f5bafaf76b5793d0e7471">findcorpus()</a>.</p>

</div>
</div>
<a class="anchor" id="a84d66c9e816d5a41ad2a419915e422a2"></a><!-- doxytag: member="ranges.h::calculate_ranges" ref="a84d66c9e816d5a41ad2a419915e422a2" args="(CorpusList *cl, int cpos, Context spc, int *left, int *right)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int calculate_ranges </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cpos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structctxtsp.html">Context</a>&#160;</td>
          <td class="paramname"><em>spc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int *&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>References <a class="el" href="structctxtsp.html#a2bbf62c6f03b4b16f08e12b3ee08381b">ctxtsp::attrib</a>, <a class="el" href="cqp_8h.html#a306ebd41c0cd1303b1372c6153f0caf8">False</a>, <a class="el" href="cl_8h.html#adc21c2c82560c944c23044aec1d5ceba">get_bounds_of_nth_struc</a>, <a class="el" href="cdaccess_8c.html#a27c31473a381561831cc85f3f64f845f">get_nr_of_strucs()</a>, <a class="el" href="cl_8h.html#a2317c1059ac9fc0a62815492e29862e9">get_num_of_struc</a>, <a class="el" href="cl_8h.html#a1ba4bdbcb598ddac7ed04f53349046d2">get_struc_attribute</a>, <a class="el" href="macros_8h.html#afa99ec4acc4ecb2dc3c2d05da15d0e3f">MAX</a>, <a class="el" href="macros_8h.html#a3acffbd305ee72dcd4593c0d8af64a4f">MIN</a>, <a class="el" href="structcl.html#aaecdad35f89c84d3d8b329955b28f18f">cl::mother_size</a>, <a class="el" href="structctxtsp.html#a439227feff9d7f55384e8780cfc2eb82">ctxtsp::size</a>, <a class="el" href="eval_8h.html#a93fe6fe1a66a9de33bb160f0c3e18954a4fabbabd4407fc904a8bc8800729863e">structure</a>, <a class="el" href="structctxtsp.html#a35485141aade83e29435ffe043aef14f">ctxtsp::type</a>, and <a class="el" href="eval_8h.html#a93fe6fe1a66a9de33bb160f0c3e18954a09c37d051e7e4b3f3a7e8e75dca15912">word</a>.</p>

<p>Referenced by <a class="el" href="ranges_8h.html#abb11955bf49a45c2256be41073660405">calculate_leftboundary()</a>, <a class="el" href="ranges_8h.html#a13064067ab67533419fed20fd5fc16a2">calculate_rightboundary()</a>, and <a class="el" href="targets_8h.html#a8b35d277644a38526a9dd897fe1866f0">evaluate_target()</a>.</p>

</div>
</div>
<a class="anchor" id="a13064067ab67533419fed20fd5fc16a2"></a><!-- doxytag: member="ranges.h::calculate_rightboundary" ref="a13064067ab67533419fed20fd5fc16a2" args="(CorpusList *cl, int cpos, Context spc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int calculate_rightboundary </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>cpos</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structctxtsp.html">Context</a>&#160;</td>
          <td class="paramname"><em>spc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>References <a class="el" href="ranges_8c.html#a84d66c9e816d5a41ad2a419915e422a2">calculate_ranges()</a>, <a class="el" href="eval_8h.html#a057366ca550f608ccc7310ec896f0719ab0ac36b187aa60c167ffcead3d5a03c0">left</a>, and <a class="el" href="eval_8h.html#a057366ca550f608ccc7310ec896f0719af763d610923b0c4614e8ecd65212666a">right</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a332a182ad6240cb7c95c4cc8d8096a7d">expand_dataspace()</a>, <a class="el" href="corpmanag_8c.html#ac2bc10afb97f5bafaf76b5793d0e7471">findcorpus()</a>, and <a class="el" href="eval_8c.html#adb7ad0a24759f5f36340f8b66bb70d79">simulate()</a>.</p>

</div>
</div>
<a class="anchor" id="a6b8b6ac5716e8b2146d4f612457040f6"></a><!-- doxytag: member="ranges.h::copy_intervals" ref="a6b8b6ac5716e8b2146d4f612457040f6" args="(CorpusList *cp, Bitfield which_intervals, int mode, char *subcorpname)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int copy_intervals </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_b_f_buf.html">Bitfield</a>&#160;</td>
          <td class="paramname"><em>intervals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>subcorpname</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Copy concordance hits from a query-generated subcorpus to a (new or existing) subcorpus. </p>
<p>This function is not currently in use.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cp</td><td>The CorpusList indicating the query to copy from. </td></tr>
    <tr><td class="paramname">intervals</td><td>A Bitfield containing a bit for each query hit, which is true if the hit is "selected", false if not. </td></tr>
    <tr><td class="paramname">mode</td><td>ALL_LINES, SELECTED_LINES or UNSELECTED_LINES (indicating which lines to copy). </td></tr>
    <tr><td class="paramname">subcorpname</td><td>Name for the subcorpus to which the lines are to be copied. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean: true for success, false for failure. </dd></dl>

<p>References <a class="el" href="options_8h.html#afc84e72df34373fab31b7bb59727dff0">auto_save</a>, <a class="el" href="output_8c.html#ac523a4b34d2f925e027d8f433de703c9">cqpmessage()</a>, <a class="el" href="ranges_8c.html#aea1c8f1fab2d8c84e574fc1ac2948363">delete_intervals()</a>, <a class="el" href="corpmanag_8c.html#a411a4b044a2214dc19180334cbcd1601">dropcorpus()</a>, <a class="el" href="corpmanag_8c.html#ab20d278862cada0d5427b8232a3b69ad">duplicate_corpus()</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a4dfd42ec49d09d8c6555c218301cc30f">Error</a>, <a class="el" href="cqp_8h.html#a306ebd41c0cd1303b1372c6153f0caf8">False</a>, <a class="el" href="corpmanag_8c.html#ac2bc10afb97f5bafaf76b5793d0e7471">findcorpus()</a>, <a class="el" href="structcl.html#a24268424ee0678c4ff66ef929d88eed3">cl::mother_name</a>, <a class="el" href="structcl.html#a5ac083a645d964373f022d03df4849c8">cl::name</a>, <a class="el" href="ranges_8c.html#ae2aae751f1ce9f4227150fd63a7d2379">RangeSetop()</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da996940fb154ea3bdae92aaf280b5fc3c">RUnion</a>, <a class="el" href="corpmanag_8c.html#ae8901e96861c947b4fa68df2c2b423de">save_subcorpus()</a>, <a class="el" href="structcl.html#ab1f9d035161a53874c84ac68634b947a">cl::saved</a>, <a class="el" href="ranges_8h.html#af471b44e8ee52787c3267827cb4f5543">SELECTED_LINES</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea12b733d4941495e86811fe6ceeeff9da">SUB</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea57cc238145ec1361c72c327674c0d754">SYSTEM</a>, <a class="el" href="bitfields_8c.html#a552f58f2765709031479a1a51b918fe3">toggle_bit()</a>, <a class="el" href="structcl.html#aaeb0da22893ef241c1ad027ca78da765">cl::type</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea632fa39438c1676b435ec43e6a0f9647">UNDEF</a>, and <a class="el" href="ranges_8h.html#a45d4eee525446d5a26f6a62936b3ad0f">UNSELECTED_LINES</a>.</p>

</div>
</div>
<a class="anchor" id="a018ec0219a3460b29980c4c6e217b16b"></a><!-- doxytag: member="ranges.h::delete_interval" ref="a018ec0219a3460b29980c4c6e217b16b" args="(CorpusList *cp, int interval_number)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int delete_interval </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>nr</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete a single concordance hit from a query-generated subcorpus. </p>
<p>This function is not currently in use.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cp</td><td>The CorpusList indicating the query to delete from. </td></tr>
    <tr><td class="paramname">nr</td><td>The index of the interval to delete (by setting its start and end values to -1). </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean: true for success, false for failure. </dd></dl>

<p>References <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="struct___range.html#abce9f5dc9c83f2639b72024fdee5d388">_Range::end</a>, <a class="el" href="structcl.html#a9b09e2bd59ba8ed71d59933389faba1b">cl::range</a>, <a class="el" href="ranges_8c.html#ae2aae751f1ce9f4227150fd63a7d2379">RangeSetop()</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da97fb52774348c9d10bc53cefeded5626">RReduce</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="structcl.html#a11418c0a440cc8d7adbc6459368abfe0">cl::sortidx</a>, <a class="el" href="struct___range.html#a37722a150250e2a5a98e5e0d11e53449">_Range::start</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea12b733d4941495e86811fe6ceeeff9da">SUB</a>, and <a class="el" href="structcl.html#aaeb0da22893ef241c1ad027ca78da765">cl::type</a>.</p>

</div>
</div>
<a class="anchor" id="a380a0ffa5288d08f4304bf0256230f90"></a><!-- doxytag: member="ranges.h::delete_intervals" ref="a380a0ffa5288d08f4304bf0256230f90" args="(CorpusList *cp, Bitfield which_intervals, int mode)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int delete_intervals </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_b_f_buf.html">Bitfield</a>&#160;</td>
          <td class="paramname"><em>intervals</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mode</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Delete a whole bunch of concordance hits from a query-generated subcorpus. </p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cp</td><td>The CorpusList indicating the query to delete from. </td></tr>
    <tr><td class="paramname">intervals</td><td>A Bitfield containing a bit for each query hit, which is true if the hit is "selected", false if not. </td></tr>
    <tr><td class="paramname">mode</td><td>ALL_LINES, SELECTED_LINES or UNSELECTED_LINES (indicating which lines to delete). </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean: true for success, false for failure. </dd></dl>

<p>References <a class="el" href="ranges_8h.html#a94683b676fd7860a033006704be14f27">ALL_LINES</a>, <a class="el" href="options_8h.html#afc84e72df34373fab31b7bb59727dff0">auto_save</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="struct_b_f_buf.html#a3c5df9c474b82fd6fbb560987c2492c8">BFBuf::elements</a>, <a class="el" href="struct___range.html#abce9f5dc9c83f2639b72024fdee5d388">_Range::end</a>, <a class="el" href="bitfields_8c.html#ad210c275b3c58c3b52a48803326ddc54">get_bit()</a>, <a class="el" href="structcl.html#a0a97de3454e7f0e1362f65b6d9c19ed2">cl::keywords</a>, <a class="el" href="structcl.html#a9b09e2bd59ba8ed71d59933389faba1b">cl::range</a>, <a class="el" href="ranges_8c.html#ae2aae751f1ce9f4227150fd63a7d2379">RangeSetop()</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da97fb52774348c9d10bc53cefeded5626">RReduce</a>, <a class="el" href="corpmanag_8c.html#ae8901e96861c947b4fa68df2c2b423de">save_subcorpus()</a>, <a class="el" href="ranges_8h.html#af471b44e8ee52787c3267827cb4f5543">SELECTED_LINES</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="structcl.html#a11418c0a440cc8d7adbc6459368abfe0">cl::sortidx</a>, <a class="el" href="struct___range.html#a37722a150250e2a5a98e5e0d11e53449">_Range::start</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea12b733d4941495e86811fe6ceeeff9da">SUB</a>, <a class="el" href="structcl.html#afb9d881897259d5af5cf582f5cdbd86a">cl::targets</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea5937389a60030a604f0efdf5e3927325">TEMP</a>, <a class="el" href="corpmanag_8c.html#aec9c9328c270d68ec70615726d23c294">touch_corpus()</a>, <a class="el" href="structcl.html#aaeb0da22893ef241c1ad027ca78da765">cl::type</a>, and <a class="el" href="ranges_8h.html#a45d4eee525446d5a26f6a62936b3ad0f">UNSELECTED_LINES</a>.</p>

<p>Referenced by <a class="el" href="ranges_8h.html#a6b8b6ac5716e8b2146d4f612457040f6">copy_intervals()</a>, <a class="el" href="parse__actions_8h.html#ac4a1a3059f49c902206ded175e91c2d8">do_delete_lines()</a>, <a class="el" href="parse__actions_8h.html#a4496bd424ac57e01410f15563f12fe13">do_delete_lines_num()</a>, <a class="el" href="parse__actions_8h.html#a2d2735c622403fc1509ad9273e2cf368">do_reduce()</a>, and <a class="el" href="parse__actions_8h.html#a2aaabbb6bcc4e5210745065baaaf715c">do_StandardQuery()</a>.</p>

</div>
</div>
<a class="anchor" id="af07571c4f777e6bb22bdb6b47e71b594"></a><!-- doxytag: member="ranges.h::FreeSortClause" ref="af07571c4f777e6bb22bdb6b47e71b594" args="(SortClause sc)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void FreeSortClause </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct__sort__clause.html">SortClause</a>&#160;</td>
          <td class="paramname"><em>sc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Frees a SortClause object. </p>

<p>References <a class="el" href="struct__sort__clause.html#acedb3b60601feb1c5ec9217986991f46">_sort_clause::attribute_name</a>, and <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>.</p>

</div>
</div>
<a class="anchor" id="a07b912b75ffdca85b0e961a6fdb313c4"></a><!-- doxytag: member="ranges.h::RangeSetop" ref="a07b912b75ffdca85b0e961a6fdb313c4" args="(CorpusList *list1, RangeSetOp operation, CorpusList *list2, Bitfield restrictor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int RangeSetop </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>corpus1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="ranges_8h.html#a5f1f7659a2f69bd2d2c47a18c1d75761">RangeSetOp</a>&#160;</td>
          <td class="paramname"><em>operation</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>corpus2</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_b_f_buf.html">Bitfield</a>&#160;</td>
          <td class="paramname"><em>restrictor</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Carries out one of a set of operations on corpus1. </p>
<p>The operations that can be carried out are as follows:</p>
<p>RUnion - copy intervals from corpus2 to corpus1 (no duplicates); RIntersection - remove from corpus1 any intervals that are not also in corpus2; RDiff RMaximalMatches - remove spurious matches according to "longest" strategy; RMinimalMatches - remove spurious matches according to "shortest" strategy; RLeftMaximalMatches - remove spurious matches according to "standard" strategy; RNonOverlapping RUniq - remove duplicate intervals from corpus1; RReduce - remove intervals marked for deletion (by having the start memebr set to -1).</p>
<p>TODO to avopid confusion with the object, a better name for this function would be do_RangeSetOp</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">corpus1</td><td>The corpus to be changed. </td></tr>
    <tr><td class="paramname">operation</td><td>Specifies which operation is to be carried out. </td></tr>
    <tr><td class="paramname">corpus2</td><td>The corpus that is the second argument for this operation. Can be NULL if no corpus2 is required for operation. </td></tr>
    <tr><td class="paramname">restrictor</td><td>Specifies which intervals in corpus2 are to be taken notice of versus ignored. Can be NULL. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean, true for all OK, otherwise false. </dd></dl>

<p>References <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="cl_8h.html#a7480d6ea66599014088f218912ddb89f">cl_realloc()</a>, <a class="el" href="struct___range.html#abce9f5dc9c83f2639b72024fdee5d388">_Range::end</a>, <a class="el" href="bitfields_8c.html#ad210c275b3c58c3b52a48803326ddc54">get_bit()</a>, <a class="el" href="structcl.html#a0a97de3454e7f0e1362f65b6d9c19ed2">cl::keywords</a>, <a class="el" href="structcl.html#a9b09e2bd59ba8ed71d59933389faba1b">cl::range</a>, <a class="el" href="ranges_8c.html#ae2aae751f1ce9f4227150fd63a7d2379">RangeSetop()</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da66f051cd3a1483fff0371412e0f71a58">RDiff</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da5b7703a91916d617d550275d7bb787ca">RIntersection</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da24cbbe5117e525baafa58bd96d118e3f">RLeftMaximalMatches</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da7a0e334e9c8588b08340a038481e2bba">RMaximalMatches</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da80eabac7488b2c8e6bf08b1253872464">RMinimalMatches</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da9fa0212efaa725509202eb71dcfdca42">RNonOverlapping</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da97fb52774348c9d10bc53cefeded5626">RReduce</a>, <a class="el" href="ranges_8c.html#ac583c30dca866ff1beceff2df20e13c7">rs_cp_range()</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4da996940fb154ea3bdae92aaf280b5fc3c">RUnion</a>, <a class="el" href="ranges_8h.html#aeb5ec9cdebf03b5a87f9c2e19012cf4dadfdac0d25fa66d2d846ebe518e52f829">RUniq</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="structcl.html#a11418c0a440cc8d7adbc6459368abfe0">cl::sortidx</a>, <a class="el" href="struct___range.html#a37722a150250e2a5a98e5e0d11e53449">_Range::start</a>, <a class="el" href="structcl.html#afb9d881897259d5af5cf582f5cdbd86a">cl::targets</a>, and <a class="el" href="corpmanag_8c.html#aec9c9328c270d68ec70615726d23c294">touch_corpus()</a>.</p>

<p>Referenced by <a class="el" href="ranges_8h.html#a6b8b6ac5716e8b2146d4f612457040f6">copy_intervals()</a>, <a class="el" href="ranges_8h.html#a018ec0219a3460b29980c4c6e217b16b">delete_interval()</a>, <a class="el" href="ranges_8h.html#a380a0ffa5288d08f4304bf0256230f90">delete_intervals()</a>, <a class="el" href="parse__actions_8h.html#a2950b6dfe2bd054bb91ff309ac16e9f5">do_cut()</a>, <a class="el" href="parse__actions_8h.html#a8116142d45ab88ccc5a0920bdc5414b9">do_setop()</a>, <a class="el" href="parse__actions_8h.html#a2aaabbb6bcc4e5210745065baaaf715c">do_StandardQuery()</a>, <a class="el" href="targets_8h.html#ad74275fdc8c9a0aba0b5df529254c7c6">evaluate_subset()</a>, <a class="el" href="parse__actions_8h.html#a332a182ad6240cb7c95c4cc8d8096a7d">expand_dataspace()</a>, <a class="el" href="corpmanag_8c.html#ac2bc10afb97f5bafaf76b5793d0e7471">findcorpus()</a>, <a class="el" href="parse__actions_8h.html#a0cd76ad97a709afa3bd6610768e1d39d">prepare_Query()</a>, <a class="el" href="ranges_8h.html#a07b912b75ffdca85b0e961a6fdb313c4">RangeSetop()</a>, and <a class="el" href="eval_8c.html#a31acd70920a1fa63e63a7087eab71722">set_corpus_matchlists()</a>.</p>

</div>
</div>
<a class="anchor" id="a1ab410ce8460f2f5f41a4aac0e43faf0"></a><!-- doxytag: member="ranges.h::RangeSort" ref="a1ab410ce8460f2f5f41a4aac0e43faf0" args="(CorpusList *c, int mk_sortidx)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void RangeSort </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>mk_sortidx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Make sure that ranges are sorted in 'natural' order (i.e. </p>
<p>by start and end cpos).</p>
<p>This function has to be called when matching ranges are modified and may be needed when loading a query result (with "undump") that is not sorted in ascending order; with optional "mk_sortidx" flag, a sortidx corresponding to the original ordering is created.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">c</td><td>The corpus (ie subcorpus/query) whose intervals ('ranges') are to be sorted. </td></tr>
    <tr><td class="paramname">mk_sortidx</td><td>Boolean flag: if true a sortidx is created. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="ranges_8c.html#a558771605d577a3ad3e8052845e7b2e4">_RS_compare_ranges()</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="output_8c.html#ac523a4b34d2f925e027d8f433de703c9">cqpmessage()</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a4dfd42ec49d09d8c6555c218301cc30f">Error</a>, <a class="el" href="structcl.html#a0a97de3454e7f0e1362f65b6d9c19ed2">cl::keywords</a>, <a class="el" href="structcl.html#a5ac083a645d964373f022d03df4849c8">cl::name</a>, <a class="el" href="structcl.html#a9b09e2bd59ba8ed71d59933389faba1b">cl::range</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="structcl.html#a11418c0a440cc8d7adbc6459368abfe0">cl::sortidx</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea12b733d4941495e86811fe6ceeeff9da">SUB</a>, <a class="el" href="structcl.html#afb9d881897259d5af5cf582f5cdbd86a">cl::targets</a>, <a class="el" href="corpmanag_8h.html#ab595f682e895370f86580c128681d88ea5937389a60030a604f0efdf5e3927325">TEMP</a>, <a class="el" href="structcl.html#aaeb0da22893ef241c1ad027ca78da765">cl::type</a>, and <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a48f2bb70fceb692a2dedd8cea496c44b">Warning</a>.</p>

<p>Referenced by <a class="el" href="parse__actions_8h.html#a4d494e76da98d09f20a77d1dfb9b7fd2">do_undump()</a>, <a class="el" href="targets_8h.html#a8b35d277644a38526a9dd897fe1866f0">evaluate_target()</a>, and <a class="el" href="targets_8h.html#a3bfdee135e380d0931994127d69a8df8">set_target()</a>.</p>

</div>
</div>
<a class="anchor" id="aaf5f006cef0ac7c1fdb5c9d55558c11a"></a><!-- doxytag: member="ranges.h::SortSubcorpus" ref="aaf5f006cef0ac7c1fdb5c9d55558c11a" args="(CorpusList *cl, SortClause sc, int count_mode, struct Redir *redir)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int SortSubcorpus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct__sort__clause.html">SortClause</a>&#160;</td>
          <td class="paramname"><em>sc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>count_mode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">struct <a class="el" href="struct_redir.html">Redir</a> *&#160;</td>
          <td class="paramname"><em>redir</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sort the (query) subcorpus specified by cl, or count frequencies of matching strings. </p>
<p>(Note that frequency counting and query result sorting are done via the same sorting algorithm.)</p>
<p>If the sort was not performed successfully, the sort index is reset to the default sort order, and the function returns false.</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cl</td><td>Subcorpus designating the query to sort. </td></tr>
    <tr><td class="paramname">sc</td><td>A sort clause. sc = NULL resets the sort index to the default sort order (i.e. sorted by corpus position). </td></tr>
    <tr><td class="paramname">count_mode</td><td>Boolean: run the function in count frequency mode? </td></tr>
    <tr><td class="paramname">redir</td><td><a class="el" href="struct_redir.html" title="The Redir structure: contains information about redirecting output to a file or pipe.">Redir</a> object for where the output of string-counting is to be displayed. </td></tr>
  </table>
  </dd>
</dl>
<dl class="return"><dt><b>Returns:</b></dt><dd>Boolean: true for successful sort, false for unsuccessful. </dd></dl>

<p>References <a class="el" href="corpmanag_8c.html#a133d99a40e4b51fe8cad6362e8b4e737">access_corpus()</a>, <a class="el" href="struct__sort__clause.html#a589921f1e3759f30c477448d007bc091">_sort_clause::anchor1</a>, <a class="el" href="struct__sort__clause.html#acae226ab88c9ea3a2703582d0856edfa">_sort_clause::anchor2</a>, <a class="el" href="cl_8h.html#a3b60fdde6a7c8fbc535efaf526dbcb78">ATT_POS</a>, <a class="el" href="struct__sort__clause.html#acedb3b60601feb1c5ec9217986991f46">_sort_clause::attribute_name</a>, <a class="el" href="ranges_8c.html#a05c09723309d7a3ef75b6020a5c130fe">break_ties</a>, <a class="el" href="struct_t_corpus.html#ab7d33183c58d7df43cc5602b9c842b37">TCorpus::charset</a>, <a class="el" href="cdaccess_8c.html#a0a7fae031e5da3da00dad86317397657">cl_cpos2id()</a>, <a class="el" href="cdaccess_8c.html#a1fc39a03758d250ec06499a0692da6ff">cl_cpos2str()</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="cdaccess_8c.html#ae9db76b80522e91e2735414a079e952b">cl_max_cpos()</a>, <a class="el" href="cl_8h.html#a6647d75d1d69c7d25447da514b7e4682">cl_strdup()</a>, <a class="el" href="cl_8h.html#a708281d7f482a1999c70df6c353d66e1">cl_string_canonical()</a>, <a class="el" href="cl_8h.html#ae58fdb28a3fe823081eed10563e3229c">cl_string_reverse()</a>, <a class="el" href="output_8c.html#aabfffd0f4126b3a2cbbad980590a0678">close_stream()</a>, <a class="el" href="structcl.html#aca3a1fb765418f9b9b1d74051aa88667">cl::corpus</a>, <a class="el" href="options_8h.html#ac77cbe1636407b6a256fc41b86bcae61a655c30a6f8af6ca3bac5588e72b7e489">cqp</a>, <a class="el" href="output_8c.html#ac523a4b34d2f925e027d8f433de703c9">cqpmessage()</a>, <a class="el" href="ranges_8c.html#ad7c4628b2df8053f1cd1e936487df8aa">current_sortidx</a>, <a class="el" href="attributes_8h.html#a0f022cbfe7890834b65ea9542eb4f50c">DEFAULT_ATT_NAME</a>, <a class="el" href="struct___range.html#abce9f5dc9c83f2639b72024fdee5d388">_Range::end</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a4dfd42ec49d09d8c6555c218301cc30f">Error</a>, <a class="el" href="cqp_8h.html#a7bb3c47930435c0d1da71fbc5107e981">EvaluationIsRunning</a>, <a class="el" href="cl_8h.html#a9c45657143514f1e869cae165ab47c44">find_attribute</a>, <a class="el" href="struct__sort__clause.html#ac8bf36fe0577cba66bccda3a6f7e80a4">_sort_clause::flags</a>, <a class="el" href="ranges_8c.html#a895a8f15cd410712dcf51984a017b9ea">group2compare()</a>, <a class="el" href="ranges_8c.html#aa5ad3584721e5d47aa99ea4fa3dec5a2">group_first</a>, <a class="el" href="ranges_8c.html#adc41721bba43d29b37667dec8d8c7fc6">group_size</a>, <a class="el" href="ranges_8c.html#ab219ee0392ac5d55d43c014e9f42e044">i2compare()</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a1cd805eaf0bb58a90fe7e7e4cf6a3cdc">Info</a>, <a class="el" href="options_8h.html#adac0b1666b7493b207b3702be8ab961d">insecure</a>, <a class="el" href="cqp_8c.html#abc72b12c7959ec9a5b3aa5269e4f7063">install_signal_handler()</a>, <a class="el" href="corpmanag_8h.html#ad831993de681337ae44f6bcccbc42d8ca2ad6669765102386dbcbcfa36ecb4629">KeywordField</a>, <a class="el" href="structcl.html#a0a97de3454e7f0e1362f65b6d9c19ed2">cl::keywords</a>, <a class="el" href="corpmanag_8h.html#ad831993de681337ae44f6bcccbc42d8ca0cd2baee009d51694176446a69ca864e">MatchEndField</a>, <a class="el" href="corpmanag_8h.html#ad831993de681337ae44f6bcccbc42d8ca16ea4d72964b1a5e3855e1e9a2d7e3e1">MatchField</a>, <a class="el" href="structcl.html#a5ac083a645d964373f022d03df4849c8">cl::name</a>, <a class="el" href="corpmanag_8h.html#ad831993de681337ae44f6bcccbc42d8cae1b5487a3a59e85cdef93ded06a9144e">NoField</a>, <a class="el" href="struct__sort__clause.html#aee7f28409ab837ab7ab64c0cb1a2dafb">_sort_clause::offset1</a>, <a class="el" href="struct__sort__clause.html#aed6fb01d8bf85735a69307c7795f89bd">_sort_clause::offset2</a>, <a class="el" href="output_8c.html#a8daf0f4a91a7fb631d27c19b8f75353b">open_stream()</a>, <a class="el" href="options_8h.html#a257bb056aaee026d2574fd4d834e2101">pretty_print</a>, <a class="el" href="structcl.html#a9b09e2bd59ba8ed71d59933389faba1b">cl::range</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="struct__sort__clause.html#a550ce40498031ba44d533f90fd268295">_sort_clause::sort_ascending</a>, <a class="el" href="ranges_8c.html#a064a54d3886ae8a99a2eb40045813a50">sort_id_cache</a>, <a class="el" href="struct__sort__clause.html#aa5e8e1004470bf030980f7c50174c9f1">_sort_clause::sort_reverse</a>, <a class="el" href="ranges_8c.html#a0199b9d38e35100de957e78f0ad63169">SortExternally()</a>, <a class="el" href="structcl.html#a11418c0a440cc8d7adbc6459368abfe0">cl::sortidx</a>, <a class="el" href="ranges_8c.html#a4ab03a8b31b605212918625c18f43cea">srt_anchor1</a>, <a class="el" href="ranges_8c.html#a0e870e7aaba8336003911df256886d23">srt_anchor2</a>, <a class="el" href="ranges_8c.html#a4fae149d4d9ed012c87978a33bc234a1">srt_ascending</a>, <a class="el" href="ranges_8c.html#a219862f4a66f310eb6fbdbd61c6a87bc">srt_end</a>, <a class="el" href="ranges_8c.html#ab9058fb904ae184beae257f0a45dd74c">srt_flags</a>, <a class="el" href="ranges_8c.html#a4fe1dec2b25946bfb9aac2edf68a184c">srt_offset1</a>, <a class="el" href="ranges_8c.html#aeabe6731bf30f51ec0ae3b57d72603fc">srt_offset2</a>, <a class="el" href="ranges_8c.html#aa098af145d76f574b4d9a2732c17ef3c">srt_reverse</a>, <a class="el" href="ranges_8c.html#a2a13e9f1151be5969651c28c676a3940">srt_start</a>, <a class="el" href="struct___range.html#a37722a150250e2a5a98e5e0d11e53449">_Range::start</a>, <a class="el" href="struct_redir.html#a867a8cb54d3231f2acbfaa44fb31d6c4">Redir::stream</a>, <a class="el" href="corpmanag_8h.html#ad831993de681337ae44f6bcccbc42d8cac4b4741c53e7d56bc13b7440a5c9ddf7">TargetField</a>, <a class="el" href="structcl.html#afb9d881897259d5af5cf582f5cdbd86a">cl::targets</a>, <a class="el" href="ranges_8c.html#a70163219ede8395a1e8908372ae76f94">text_size</a>, <a class="el" href="corpmanag_8c.html#aec9c9328c270d68ec70615726d23c294">touch_corpus()</a>, <a class="el" href="ranges_8c.html#aa2fd7f53e809588a035630d6fb2f0009">USE_SORT_CACHE</a>, <a class="el" href="options_8h.html#a0610218ccaf8cab9eec75d3b47231f81">UseExternalSorting</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a48f2bb70fceb692a2dedd8cea496c44b">Warning</a>, and <a class="el" href="options_8h.html#ad53e63bcd94f1ad540b16323bedf63e7">which_app</a>.</p>

</div>
</div>
<a class="anchor" id="a816771441eaa5f9006f4187f9d0b99b4"></a><!-- doxytag: member="ranges.h::SortSubcorpusRandomize" ref="a816771441eaa5f9006f4187f9d0b99b4" args="(CorpusList *cl, int seed)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int SortSubcorpusRandomize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structcl.html">CorpusList</a> *&#160;</td>
          <td class="paramname"><em>cl</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>seed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Sorts a query result in random order. </p>
<p>If seed &gt; 0, a reproducible and stable ordering is generated based on the start and end corpus positions of matches (i.e. two given matches will always be sorted in the same order).</p>
<dl><dt><b>Parameters:</b></dt><dd>
  <table class="params">
    <tr><td class="paramname">cl</td><td>Corpus-list object representing the query to sort. </td></tr>
    <tr><td class="paramname">seed</td><td>Seed for the randomiser; should ideally be a prime number (2^31 is a particularly bad choice); if it is 0, then the internal RNG's standard random order is used. </td></tr>
  </table>
  </dd>
</dl>

<p>References <a class="el" href="corpmanag_8c.html#a133d99a40e4b51fe8cad6362e8b4e737">access_corpus()</a>, <a class="el" href="cl_8h.html#a9e15a3c725711d9effd623b2f3e225be">cl_free</a>, <a class="el" href="cl_8h.html#a4e4eccd789155123ab533ed0cecbecea">cl_malloc()</a>, <a class="el" href="cl_8h.html#a551e0245007f49ff7b6c39498409e104">cl_random()</a>, <a class="el" href="cl_8h.html#abae04f24d7ffb03fa5ee294ba1e5e543">cl_set_rng_state()</a>, <a class="el" href="options_8h.html#ac77cbe1636407b6a256fc41b86bcae61a655c30a6f8af6ca3bac5588e72b7e489">cqp</a>, <a class="el" href="output_8c.html#ac523a4b34d2f925e027d8f433de703c9">cqpmessage()</a>, <a class="el" href="struct___range.html#abce9f5dc9c83f2639b72024fdee5d388">_Range::end</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a4dfd42ec49d09d8c6555c218301cc30f">Error</a>, <a class="el" href="cqp_8h.html#a7bb3c47930435c0d1da71fbc5107e981">EvaluationIsRunning</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a1cd805eaf0bb58a90fe7e7e4cf6a3cdc">Info</a>, <a class="el" href="cqp_8c.html#abc72b12c7959ec9a5b3aa5269e4f7063">install_signal_handler()</a>, <a class="el" href="structcl.html#a5ac083a645d964373f022d03df4849c8">cl::name</a>, <a class="el" href="ranges_8c.html#a1460ebeed43e517d7ff7e9b43c213e74">random_compare()</a>, <a class="el" href="ranges_8c.html#adfc77ff22250a6475ec266a69c229c96">random_sort_keys</a>, <a class="el" href="structcl.html#a9b09e2bd59ba8ed71d59933389faba1b">cl::range</a>, <a class="el" href="structcl.html#a439227feff9d7f55384e8780cfc2eb82">cl::size</a>, <a class="el" href="structcl.html#a11418c0a440cc8d7adbc6459368abfe0">cl::sortidx</a>, <a class="el" href="struct___range.html#a37722a150250e2a5a98e5e0d11e53449">_Range::start</a>, <a class="el" href="corpmanag_8c.html#aec9c9328c270d68ec70615726d23c294">touch_corpus()</a>, <a class="el" href="output_8h.html#a9c2eeea9cd09fb001747ef4cc99399a4a48f2bb70fceb692a2dedd8cea496c44b">Warning</a>, and <a class="el" href="options_8h.html#ad53e63bcd94f1ad540b16323bedf63e7">which_app</a>.</p>

</div>
</div>
</div>
<hr class="footer"/><address class="footer"><small>Generated on Tue Jan 17 2012 22:07:39 for CWB by&#160;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.3 </small></address>
</body>
</html>
