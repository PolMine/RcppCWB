Here is the list of things that need to be done to get all components up to v3.5


FOR V 3.5.0
===========

- Complete documentation of CWB-Perl [SE] (CWB::CEQL and CWB::CL are now complete)
- Get to Zero Known Bugs in the core  [AH/SE]
- Ferret out any non-checked input in CQP for character set checking. (this may apply to the cwb-utils as well) [AH]

[Following does not need to precede "core" 3.5 but is needed for CQPweb to be at 3.5]

- Get to Zero Known Bugs in CQPweb [AH]


FOR V 3.5.0: REGEX-ENGINE LEGACY ENCODINGS OPTIMIZATION
=======================================================

The below was a plan to create our own diacritic-folder as a component of the regex optimiser
(since diacritic folding is the heavy-duty bit). Since the PCRE JIT is doing so well,
this is no longer a matter of urgency. However since 3.5 is going to be "it" as far as the ISO-8859
charsets are concerned, we might as well get things working as well as possible there.

THE PLAN AS IT WAS:

- Implement our own PCRE character tables for all 8-bit encodings to enable case-insensitive matching beyond ASCII. [AH/SE]
  -- Build tables using PCRE functions and serialize them to C source code (using a copy of "dftables.c" from PCRE source code)
  -- Perhaps replace the case-folding tables with those used by cl_string_canonical() for consistency
  -- Diacritic-folding is not supported by PCRE, so there are no mapping tables available there
- Test revised implementation of regular expression matching and the optimizer (esp. with %c and %d flags). 
  -- Tests in CWB::CL Perl module, but we need more ... [SE]
  -- Especially for a small corpus with non-Latin1 character set (--> provide in UTF-8 and legacy formats) [AH]
- Re-enable regexp optimizer by default (after testing phase) [SE]
  -- Benchmarks show that optimizer is only beneficial if there are no %cd flags (see "regex_benchmarks.txt")
  -- For release, enable optimizer in this case, but disable otherwise
  -- set Optimize on; must not enable optimizer globally because it leads to slowdown with %cd flags


WINDOWS-RELATED THINGS POSTPONED TILL 3.5.1 or 3.6.X
====================================================

- Get CWB to compile actually on Windows with MinGW rather than (or as well as) cross-compiling [AH]
- Link Glib & PCRE statically not dynamically on Windows so we don't need to mess with DLLs [AH]
- Work out an install system for the Perl modules on Windows (would be nice to avoid requirement for gcc/gmake if possible;
  precompiled binary package for Windows installation? Use Strawberry Perl?) [AH]
- Get cwb-config to work on Windows (maybe by reimplementing it in VB script?) [AH]
- Add use of Readline library for command completion on Windows (but check: will it interfere with cmd.exe's 
  command history / left/right scrolling ?) [AH]
- Add improved documentation/hints on ways to handle character sets on Windows [AH/SE]
- Make it possible to avoid using pipes on Windows (for cwb-encode etc.) [AH]
- Fix any bugs related to Win64 compatibility with how we do UTF-8.
- Make CQPweb Windows-compatible [AH]
- Modify the corpus encoding and CQP tutorials to take account of the fact that the user might be using Win. [AH/SE]


THINGS THAT ARE ON THE LIST, BUT WON'T BE TACKLED TILL 3.9/4.0
==============================================================

This is just a vague list to record roughly what we intend to be doing down the road.

- New index format for v 4.0 (a roadmap item which has grown into the "ziggurat" undertaking)
- Increase the limit on corpus size by an order of magnitude or several.
- Better XML indexing & queries: recursive nesting of elements, start tag attributes
- Add Dependency Attributes
- Sort out CQP output modes in a principled way (one XML mode, one plaintext mode)
- Standardise the object-oriented code (class/method naming rules) in the core
- Refactor CQP into clearcut modules (to enable easier optimisation / rewriting of sub-units if necessary)
- Multiple target positions in CQP
- Query optimisation
- Advances to the query language (Different, specialised QLs?)
- New query features (Google-style IR searches; Queries on dependency parse graphs; Fuzzy search & phrase queries)
- Advances to CWB-Perl to allow access to the spiffy new features
- Advances to CQPweb as per its own rarely updated roadmap todo-list (http://cwb.sourceforge.net/future.php#cqpweb)


THINGS FROM THE ABOVE LIST THAT ARE NOW COMPLETE
================================================

- Give up on official v3.0 release, which is superseded by v3.5
- Remove 3.0-related downloads and information from CWB Web page with official release of 3.5
- But keep binaries available as legacy downloads (Linux 32-bit, Mac PPC, Solaris)
- Get to Zero Known Bugs in CWB-Perl [SE]
- Complete CQP tutorial -- searching / using aligned corpora
- Make fixed-char KWIC output "work", or at least approximate working, with UTF-8, as a stopgap before 3.9/4.0
- Complete documentation of aligned corpora in core and CWB-Perl
- (Change version number in the Perl modules)
- Update CWB-Perl for changes in the CL API in v3.1 & 3.2 (most notably, Unicode)
- Write a definitive documentation of the problems with UTF-8 characters in Windows and how to get round them
  -- This is "kind of" complete, in that the website FAQ now contains all our best advice on this. 
- Modify the CQP tutorial to reflect the fact that we are now on PCRE.
- Add matching-strategy switch flag to the CQP syntax, and add to CQPweb [AH]
